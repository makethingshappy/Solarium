; generated by Component: ARM Compiler 5.06 update 3 (build 300) Tool: ArmCC [4d35f0]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\objects\brd_bokra_lpc824_lite.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\brd_bokra_lpc824_lite.d --cpu=Cortex-M0+ --apcs=interwork -O0 --diag_suppress=9931 -I..\BOKRA485 -I.\_CMSIS\v5.20\Include -I.\lpc_chip_82x\inc -I.\Hardware -IC:\Users\Peter\Documents\Projects\Workspace-Keil\LPC824\BOKRA485\v1.30\BOKRA485\RTE -IC:\Keil_v5\ARM\PACK\Keil\LPC800_DFP\1.10.1\Device\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=521 -DLPC824M201JHI33 -DCORE_M0PLUS --omf_browse=.\objects\brd_bokra_lpc824_lite.crf Hardware\brd_BOKRA_LPC824_Lite.c]
                          THUMB

                          AREA ||i.Board_Clock_Init||, CODE, READONLY, ALIGN=2

                  Board_Clock_Init PROC
;;;66     // ------------------------------------------------------------------------------------------------------
;;;67     void Board_Clock_Init(void)
000000  b508              PUSH     {r3,lr}
;;;68     {
;;;69     	
;;;70     	Chip_Clock_SetPLLBypass(false, false);											// EXT oscillator < 15MHz
000002  2100              MOVS     r1,#0
000004  4608              MOV      r0,r1
000006  f7fffffe          BL       Chip_Clock_SetPLLBypass
;;;71     	
;;;72         Chip_SYSCTL_PowerUp(SYSCTL_SLPWAKE_SYSOSC_PD);   								// Power Up external system oscillator
00000a  2020              MOVS     r0,#0x20
00000c  f7fffffe          BL       Chip_SYSCTL_PowerUp
;;;73     	Chip_SYSCTL_PowerUp(SYSCTL_SLPWAKE_SYSPLL_PD);   								// Power Up system PLL
000010  2080              MOVS     r0,#0x80
000012  f7fffffe          BL       Chip_SYSCTL_PowerUp
;;;74     	
;;;75         for (volatile int i = 0; i < 1000; i++) { }										// wait for stabilization
000016  2000              MOVS     r0,#0
000018  9000              STR      r0,[sp,#0]
00001a  e002              B        |L1.34|
                  |L1.28|
00001c  9800              LDR      r0,[sp,#0]
00001e  1c40              ADDS     r0,r0,#1
000020  9000              STR      r0,[sp,#0]
                  |L1.34|
000022  217d              MOVS     r1,#0x7d
000024  00c9              LSLS     r1,r1,#3
000026  9800              LDR      r0,[sp,#0]
000028  4288              CMP      r0,r1
00002a  dbf7              BLT      |L1.28|
;;;76     
;;;77     	// external XTAL = 12 MHz:
;;;78     	//Chip_Clock_SetSystemPLLSource(SYSCTL_PLLCLKSRC_SYSOSC);							// set XTAL as PLL clock Source - NOT WORKING !!!!!
;;;79     	
;;;80     	// Internal RC:
;;;81     	Chip_Clock_SetSystemPLLSource(SYSCTL_PLLCLKSRC_IRC);							// set IRC as PLL clock Source
00002c  2000              MOVS     r0,#0
00002e  f7fffffe          BL       Chip_Clock_SetSystemPLLSource
;;;82     
;;;83     	Chip_FMC_SetFLASHAccess(FLASHTIM_30MHZ_CPU);									// Setup FLASH access to 2 clocks (up to 30MHz)
000032  2001              MOVS     r0,#1
000034  4a10              LDR      r2,|L1.120|
000036  6912              LDR      r2,[r2,#0x10]
000038  2100              MOVS     r1,#0
00003a  460a              MOV      r2,r1
00003c  4302              ORRS     r2,r2,r0
00003e  4b0e              LDR      r3,|L1.120|
000040  611a              STR      r2,[r3,#0x10]
000042  bf00              NOP      
;;;84     	
;;;85     	Chip_Clock_SetupSystemPLL(4, 1);	
000044  2004              MOVS     r0,#4
000046  2101              MOVS     r1,#1
000048  014a              LSLS     r2,r1,#5
00004a  4302              ORRS     r2,r2,r0
00004c  4b0b              LDR      r3,|L1.124|
00004e  609a              STR      r2,[r3,#8]
000050  bf00              NOP      
;;;86     
;;;87     	while (!Chip_Clock_IsSystemPLLLocked()) {}										// Wait for PLL to lock
000052  bf00              NOP      
                  |L1.84|
000054  bf00              NOP      
000056  4809              LDR      r0,|L1.124|
000058  68c0              LDR      r0,[r0,#0xc]
00005a  07c0              LSLS     r0,r0,#31
00005c  0fc0              LSRS     r0,r0,#31
00005e  2800              CMP      r0,#0
000060  d0f8              BEQ      |L1.84|
;;;88     
;;;89     	Chip_Clock_SetSysClockDiv(2);													// System Clock - max. 30MHz
000062  2002              MOVS     r0,#2
000064  4905              LDR      r1,|L1.124|
000066  3140              ADDS     r1,r1,#0x40
000068  6388              STR      r0,[r1,#0x38]
00006a  bf00              NOP      
;;;90     		
;;;91     	Chip_Clock_SetMainClockSource(SYSCTL_MAINCLKSRC_PLLOUT); 						// Main clock as PLL Out
00006c  2003              MOVS     r0,#3
00006e  f7fffffe          BL       Chip_Clock_SetMainClockSource
;;;92     		
;;;93     	SystemCoreClockUpdate();
000072  f7fffffe          BL       SystemCoreClockUpdate
;;;94     }
000076  bd08              POP      {r3,pc}
;;;95     
                          ENDP

                  |L1.120|
                          DCD      0x40040000
                  |L1.124|
                          DCD      0x40048000

                          AREA ||i.Board_I2C_Init||, CODE, READONLY, ALIGN=2

                  Board_I2C_Init PROC
;;;38     // ------------------------------------------------------------------------------------------------------
;;;39     void Board_I2C_Init (void)
000000  b570              PUSH     {r4-r6,lr}
;;;40     {
;;;41     	uint8_t scl;
;;;42     	uint32_t CLKDiv;
;;;43     	// initialization code here:
;;;44     
;;;45     	Chip_I2C_Init(CFG_I2C_PTRPERI);													// Enable periph. clock and reset it
000002  4824              LDR      r0,|L2.148|
000004  f7fffffe          BL       Chip_I2C_Init
;;;46     
;;;47     	CLKDiv = 1;																		// start at divider = 1
000008  2401              MOVS     r4,#1
;;;48     	do
00000a  bf00              NOP      
                  |L2.12|
;;;49     	{	
;;;50     		Chip_I2C_SetClockDiv(CFG_I2C_PTRPERI, CLKDiv);								// Setup clock divider for I2C
00000c  4620              MOV      r0,r4
00000e  2800              CMP      r0,#0
000010  d007              BEQ      |L2.34|
000012  2101              MOVS     r1,#1
000014  0409              LSLS     r1,r1,#16
000016  4288              CMP      r0,r1
000018  d803              BHI      |L2.34|
00001a  1e41              SUBS     r1,r0,#1
00001c  4a1d              LDR      r2,|L2.148|
00001e  6151              STR      r1,[r2,#0x14]
000020  e002              B        |L2.40|
                  |L2.34|
000022  2100              MOVS     r1,#0
000024  4a1b              LDR      r2,|L2.148|
000026  6151              STR      r1,[r2,#0x14]
                  |L2.40|
000028  bf00              NOP      
;;;51     		CLKDiv = Chip_I2C_GetClockDiv(CFG_I2C_PTRPERI);								// read back
00002a  bf00              NOP      
00002c  4819              LDR      r0,|L2.148|
00002e  6940              LDR      r0,[r0,#0x14]
000030  b280              UXTH     r0,r0
000032  1c40              ADDS     r0,r0,#1
000034  4604              MOV      r4,r0
;;;52     		scl= Chip_Clock_GetSystemClockRate() / ( CLKDiv * (CFG_I2C_SPEEDKHZ * 1000));
000036  f7fffffe          BL       Chip_Clock_GetSystemClockRate
00003a  4606              MOV      r6,r0
00003c  4816              LDR      r0,|L2.152|
00003e  4360              MULS     r0,r4,r0
000040  4601              MOV      r1,r0
000042  4630              MOV      r0,r6
000044  f7fffffe          BL       __aeabi_uidivmod
000048  b2c5              UXTB     r5,r0
;;;53     		CLKDiv ++;
00004a  1c64              ADDS     r4,r4,#1
;;;54     		if(CLKDiv > 0x10000) return;
00004c  2001              MOVS     r0,#1
00004e  0400              LSLS     r0,r0,#16
000050  4284              CMP      r4,r0
000052  d900              BLS      |L2.86|
                  |L2.84|
;;;55     	}while((scl < 1) || (scl > 8));													// recalculate while scl is out of range
;;;56     		
;;;57     	Chip_I2CM_SetBusSpeed(CFG_I2C_PTRPERI, CFG_I2C_SPEEDKHZ);						// Setup I2C Bus Speed
;;;58     	
;;;59     	NVIC_EnableIRQ(CFG_I2C_IRQNUM);													// Enable I2C Interrupt
;;;60     	Chip_I2CM_Enable(CFG_I2C_PTRPERI);												// Enable I2C Master Mode
;;;61     }
000054  bd70              POP      {r4-r6,pc}
                  |L2.86|
000056  2d01              CMP      r5,#1                 ;55
000058  dbd8              BLT      |L2.12|
00005a  2d08              CMP      r5,#8                 ;55
00005c  dcd6              BGT      |L2.12|
00005e  21ff              MOVS     r1,#0xff              ;57
000060  3191              ADDS     r1,r1,#0x91           ;57
000062  480c              LDR      r0,|L2.148|
000064  f7fffffe          BL       Chip_I2CM_SetBusSpeed
000068  2008              MOVS     r0,#8                 ;59
00006a  2800              CMP      r0,#0                 ;59
00006c  db05              BLT      |L2.122|
00006e  06c2              LSLS     r2,r0,#27             ;59
000070  0ed2              LSRS     r2,r2,#27             ;59
000072  2101              MOVS     r1,#1                 ;59
000074  4091              LSLS     r1,r1,r2              ;59
000076  4a09              LDR      r2,|L2.156|
000078  6011              STR      r1,[r2,#0]            ;59
                  |L2.122|
00007a  bf00              NOP                            ;59
00007c  bf00              NOP                            ;60
00007e  4805              LDR      r0,|L2.148|
000080  6800              LDR      r0,[r0,#0]            ;60
000082  06c0              LSLS     r0,r0,#27             ;60
000084  0ec0              LSRS     r0,r0,#27             ;60
000086  2101              MOVS     r1,#1                 ;60
000088  4308              ORRS     r0,r0,r1              ;60
00008a  4902              LDR      r1,|L2.148|
00008c  6008              STR      r0,[r1,#0]            ;60
00008e  bf00              NOP                            ;60
000090  bf00              NOP      
000092  e7df              B        |L2.84|
;;;62     
                          ENDP

                  |L2.148|
                          DCD      0x40050000
                  |L2.152|
                          DCD      0x00061a80
                  |L2.156|
                          DCD      0xe000e100

                          AREA ||i.Board_Init||, CODE, READONLY, ALIGN=2

                  Board_Init PROC
;;;99     // ------------------------------------------------------------------------------------------------------
;;;100    void Board_Init(void)
000000  b510              PUSH     {r4,lr}
;;;101    {
;;;102    	Board_MCU_Pin_Init();															// init and configure MCU IO pins
000002  f7fffffe          BL       Board_MCU_Pin_Init
;;;103    	
;;;104    	Board_Clock_Init();
000006  f7fffffe          BL       Board_Clock_Init
;;;105    	
;;;106    	// ************ SysTick
;;;107    	App.SysClock = Chip_Clock_GetSystemClockRate();
00000a  f7fffffe          BL       Chip_Clock_GetSystemClockRate
00000e  4911              LDR      r1,|L3.84|
000010  6008              STR      r0,[r1,#0]  ; App
;;;108    	App.MainClock = Chip_Clock_GetMainClockRate();
000012  f7fffffe          BL       Chip_Clock_GetMainClockRate
000016  490f              LDR      r1,|L3.84|
000018  6048              STR      r0,[r1,#4]  ; App
;;;109    	SysTick_Config(App.SysClock / CFG_SYSTICKRATE_HZ);								// Enable systick timer
00001a  6808              LDR      r0,[r1,#0]  ; App
00001c  217d              MOVS     r1,#0x7d
00001e  00c9              LSLS     r1,r1,#3
000020  f7fffffe          BL       __aeabi_uidivmod
000024  4604              MOV      r4,r0
000026  1e60              SUBS     r0,r4,#1
000028  490b              LDR      r1,|L3.88|
00002a  4288              CMP      r0,r1
00002c  d900              BLS      |L3.48|
00002e  e00c              B        |L3.74|
                  |L3.48|
000030  1e60              SUBS     r0,r4,#1
000032  490a              LDR      r1,|L3.92|
000034  6148              STR      r0,[r1,#0x14]
000036  2103              MOVS     r1,#3
000038  1f08              SUBS     r0,r1,#4
00003a  f7fffffe          BL       __NVIC_SetPriority
00003e  2000              MOVS     r0,#0
000040  4906              LDR      r1,|L3.92|
000042  6188              STR      r0,[r1,#0x18]
000044  2007              MOVS     r0,#7
000046  6108              STR      r0,[r1,#0x10]
000048  bf00              NOP      
                  |L3.74|
;;;110    
;;;111    	
;;;112    	// ************ UART
;;;113    	Board_UART_Init();																// Call Init
00004a  f7fffffe          BL       Board_UART_Init
;;;114    		
;;;115    	
;;;116    	// ************ I2C
;;;117    	Board_I2C_Init();																// Call Init
00004e  f7fffffe          BL       Board_I2C_Init
;;;118    }
000052  bd10              POP      {r4,pc}
                          ENDP

                  |L3.84|
                          DCD      App
                  |L3.88|
                          DCD      0x00ffffff
                  |L3.92|
                          DCD      0xe000e000

                          AREA ||i.Board_MCU_Pin_Init||, CODE, READONLY, ALIGN=2

                  Board_MCU_Pin_Init PROC
;;;39     // ------------------------------------------------------------------------------------------------------
;;;40     static inline void Board_MCU_Pin_Init(void)
000000  b510              PUSH     {r4,lr}
;;;41     {
;;;42     	Chip_GPIO_Init (LPC_GPIO_PORT);													// Init GPIO - run CLK also
000002  2005              MOVS     r0,#5
000004  0740              LSLS     r0,r0,#29
000006  f7fffffe          BL       Chip_GPIO_Init
;;;43     	Chip_Clock_EnablePeriphClock(SYSCTL_CLOCK_SWM);									// Enable CLK for SWM Block
00000a  2007              MOVS     r0,#7
00000c  f7fffffe          BL       Chip_Clock_EnablePeriphClock
;;;44     	Chip_Clock_EnablePeriphClock(SYSCTL_CLOCK_IOCON);								// Enable CLK for IOCON Block
000010  2012              MOVS     r0,#0x12
000012  f7fffffe          BL       Chip_Clock_EnablePeriphClock
;;;45     	
;;;46     	// ToDo - insert code: Select default value for SWM! SWM is reset after PUR!
;;;47     	
;;;48     	// Configure UART0-TX pin
;;;49     	Chip_GPIO_SetPinState(LPC_GPIO_PORT, 0, 4, 1);									// deactivate pin
000016  2301              MOVS     r3,#1
000018  2204              MOVS     r2,#4
00001a  2100              MOVS     r1,#0
00001c  2005              MOVS     r0,#5
00001e  0740              LSLS     r0,r0,#29
000020  f7fffffe          BL       Chip_GPIO_SetPinState
;;;50     	Chip_SWM_MovablePinAssign( SWM_U0_TXD_O, 4);									// SWM move TX0 to P0.4
000024  2104              MOVS     r1,#4
000026  2000              MOVS     r0,#0
000028  f7fffffe          BL       Chip_SWM_MovablePinAssign
;;;51     	// Configure UART0-RX pin
;;;52     	Chip_GPIO_SetPinState(LPC_GPIO_PORT, 0, 0, 1);									// deactivate pin
00002c  2301              MOVS     r3,#1
00002e  2200              MOVS     r2,#0
000030  4611              MOV      r1,r2
000032  2005              MOVS     r0,#5
000034  0740              LSLS     r0,r0,#29
000036  f7fffffe          BL       Chip_GPIO_SetPinState
;;;53     	Chip_SWM_MovablePinAssign( SWM_U0_RXD_I, 0);									// SWM move RX0 to P0.0
00003a  2100              MOVS     r1,#0
00003c  2001              MOVS     r0,#1
00003e  f7fffffe          BL       Chip_SWM_MovablePinAssign
;;;54     	Chip_IOCON_PinSetMode(LPC_IOCON, IOCON_PIO(0), PIN_MODE_PULLUP);				// Enable Pull Up to Rx
000042  2202              MOVS     r2,#2
000044  2111              MOVS     r1,#0x11
000046  4847              LDR      r0,|L4.356|
000048  f7fffffe          BL       Chip_IOCON_PinSetMode
;;;55     	
;;;56     	// Configure SWDIO pin
;;;57     	Chip_GPIO_SetPinState(LPC_GPIO_PORT, 0, 2, 1);									// deactivate pin
00004c  2301              MOVS     r3,#1
00004e  2202              MOVS     r2,#2
000050  2100              MOVS     r1,#0
000052  2005              MOVS     r0,#5
000054  0740              LSLS     r0,r0,#29
000056  f7fffffe          BL       Chip_GPIO_SetPinState
;;;58     	Chip_SWM_FixedPinEnable( SWM_FIXED_SWDIO, true);								// SWM enable fixed function SWDIO - P0.2
00005a  2101              MOVS     r1,#1
00005c  2005              MOVS     r0,#5
00005e  f7fffffe          BL       Chip_SWM_FixedPinEnable
;;;59     	// Configure SWDCLK pin
;;;60     	Chip_GPIO_SetPinState(LPC_GPIO_PORT, 0, 3, 1);									// deactivate pin
000062  2301              MOVS     r3,#1
000064  2203              MOVS     r2,#3
000066  2100              MOVS     r1,#0
000068  2005              MOVS     r0,#5
00006a  0740              LSLS     r0,r0,#29
00006c  f7fffffe          BL       Chip_GPIO_SetPinState
;;;61     	Chip_SWM_FixedPinEnable( SWM_FIXED_SWCLK, true);								// SWM enable fixed function SWDCLK - P0.3
000070  2101              MOVS     r1,#1
000072  2004              MOVS     r0,#4
000074  f7fffffe          BL       Chip_SWM_FixedPinEnable
;;;62     
;;;63     	// Configure Reset pin
;;;64     	Chip_GPIO_SetPinState(LPC_GPIO_PORT, 0, 5, 1);									// deactivate pin
000078  2301              MOVS     r3,#1
00007a  2205              MOVS     r2,#5
00007c  2100              MOVS     r1,#0
00007e  0750              LSLS     r0,r2,#29
000080  f7fffffe          BL       Chip_GPIO_SetPinState
;;;65     	Chip_SWM_FixedPinEnable( SWM_FIXED_RST, true);									// SWM enable fixed function Reset - P0.5
000084  2101              MOVS     r1,#1
000086  2008              MOVS     r0,#8
000088  f7fffffe          BL       Chip_SWM_FixedPinEnable
;;;66     	// Configure XTALIN pin
;;;67     	Chip_GPIO_SetPinState(LPC_GPIO_PORT, 0, 8, 1);									// deactivate pin
00008c  2301              MOVS     r3,#1
00008e  2208              MOVS     r2,#8
000090  2100              MOVS     r1,#0
000092  2005              MOVS     r0,#5
000094  0740              LSLS     r0,r0,#29
000096  f7fffffe          BL       Chip_GPIO_SetPinState
;;;68     	Chip_SWM_FixedPinEnable( SWM_FIXED_XTALIN, true);								// SWM enable fixed function XTALIN - P0.8
00009a  2101              MOVS     r1,#1
00009c  2006              MOVS     r0,#6
00009e  f7fffffe          BL       Chip_SWM_FixedPinEnable
;;;69     	Chip_IOCON_PinSetMode( LPC_IOCON, IOCON_PIO8, PIN_MODE_INACTIVE);
0000a2  2200              MOVS     r2,#0
0000a4  210e              MOVS     r1,#0xe
0000a6  482f              LDR      r0,|L4.356|
0000a8  f7fffffe          BL       Chip_IOCON_PinSetMode
;;;70     	
;;;71     	// Configure XTALOUT pin
;;;72     	Chip_GPIO_SetPinState(LPC_GPIO_PORT, 0, 9, 1);									// deactivate pin
0000ac  2301              MOVS     r3,#1
0000ae  2209              MOVS     r2,#9
0000b0  2100              MOVS     r1,#0
0000b2  2005              MOVS     r0,#5
0000b4  0740              LSLS     r0,r0,#29
0000b6  f7fffffe          BL       Chip_GPIO_SetPinState
;;;73     	Chip_SWM_FixedPinEnable( SWM_FIXED_XTALOUT, true);								// SWM enable fixed function XTALOUT - P0.9
0000ba  2101              MOVS     r1,#1
0000bc  2007              MOVS     r0,#7
0000be  f7fffffe          BL       Chip_SWM_FixedPinEnable
;;;74     	Chip_IOCON_PinSetMode( LPC_IOCON, IOCON_PIO9, PIN_MODE_INACTIVE);
0000c2  2200              MOVS     r2,#0
0000c4  210d              MOVS     r1,#0xd
0000c6  4827              LDR      r0,|L4.356|
0000c8  f7fffffe          BL       Chip_IOCON_PinSetMode
;;;75     
;;;76     	// Configure I2C-SDA pin
;;;77     	Chip_GPIO_SetPinState(LPC_GPIO_PORT, 0, 11, 1);									// deactivate pin
0000cc  2301              MOVS     r3,#1
0000ce  220b              MOVS     r2,#0xb
0000d0  2100              MOVS     r1,#0
0000d2  2005              MOVS     r0,#5
0000d4  0740              LSLS     r0,r0,#29
0000d6  f7fffffe          BL       Chip_GPIO_SetPinState
;;;78     	Chip_SWM_FixedPinEnable( SWM_FIXED_I2C0_SDA, true);								// SWM enable fixed function I2C_SDA - P0.11
0000da  2101              MOVS     r1,#1
0000dc  200b              MOVS     r0,#0xb
0000de  f7fffffe          BL       Chip_SWM_FixedPinEnable
;;;79     	Chip_IOCON_PinSetI2CMode(LPC_IOCON, IOCON_PIO(11), PIN_I2CMODE_STDFAST);		// set I2C Pin mode to Standard speed - 400kHz
0000e2  2200              MOVS     r2,#0
0000e4  2107              MOVS     r1,#7
0000e6  481f              LDR      r0,|L4.356|
0000e8  f7fffffe          BL       Chip_IOCON_PinSetI2CMode
;;;80     	
;;;81     	// Configure I2C-SCL pin
;;;82     	Chip_GPIO_SetPinState(LPC_GPIO_PORT, 0, 10, 1);									// deactivate pin
0000ec  2301              MOVS     r3,#1
0000ee  220a              MOVS     r2,#0xa
0000f0  2100              MOVS     r1,#0
0000f2  0710              LSLS     r0,r2,#28
0000f4  f7fffffe          BL       Chip_GPIO_SetPinState
;;;83     	Chip_SWM_FixedPinEnable( SWM_FIXED_I2C0_SCL, true);								// SWM enable fixed function I2C_SCL - P0.10
0000f8  2101              MOVS     r1,#1
0000fa  200c              MOVS     r0,#0xc
0000fc  f7fffffe          BL       Chip_SWM_FixedPinEnable
;;;84     	Chip_IOCON_PinSetI2CMode(LPC_IOCON, IOCON_PIO(10), PIN_I2CMODE_STDFAST);		// set I2C Pin mode to Standard speed - 400kHz
000100  2200              MOVS     r2,#0
000102  2108              MOVS     r1,#8
000104  4817              LDR      r0,|L4.356|
000106  f7fffffe          BL       Chip_IOCON_PinSetI2CMode
;;;85     
;;;86     	// Configure LED GREEN - GPIO0.19 pin
;;;87     	Chip_GPIO_SetPinState(LPC_GPIO_PORT, 0, BRD_LED_GREEN_PORTPIN, 0);				// deactivate pin
00010a  2300              MOVS     r3,#0
00010c  2213              MOVS     r2,#0x13
00010e  4619              MOV      r1,r3
000110  2005              MOVS     r0,#5
000112  0740              LSLS     r0,r0,#29
000114  f7fffffe          BL       Chip_GPIO_SetPinState
;;;88     	Chip_GPIO_SetPinDIR( LPC_GPIO_PORT, 0, BRD_LED_GREEN_PORTPIN, IO_OUTPUT);		// set pin direction
000118  2301              MOVS     r3,#1
00011a  2213              MOVS     r2,#0x13
00011c  2100              MOVS     r1,#0
00011e  2005              MOVS     r0,#5
000120  0740              LSLS     r0,r0,#29
000122  f7fffffe          BL       Chip_GPIO_SetPinDIR
;;;89     	Chip_IOCON_PinSetOpenDrainMode(LPC_IOCON, IOCON_PIO(BRD_LED_GREEN_PORTPIN), true); 	// set mode as opendrain
000126  2201              MOVS     r2,#1
000128  211d              MOVS     r1,#0x1d
00012a  480e              LDR      r0,|L4.356|
00012c  f7fffffe          BL       Chip_IOCON_PinSetOpenDrainMode
;;;90     	
;;;91     	// Configure LED YELLOW - GPIO0.18 pin
;;;92     	Chip_GPIO_SetPinState(LPC_GPIO_PORT, 0, BRD_LED_YELLOW_PORTPIN, 0);				// deactivate pin
000130  2300              MOVS     r3,#0
000132  2212              MOVS     r2,#0x12
000134  4619              MOV      r1,r3
000136  2005              MOVS     r0,#5
000138  0740              LSLS     r0,r0,#29
00013a  f7fffffe          BL       Chip_GPIO_SetPinState
;;;93     	Chip_GPIO_SetPinDIR( LPC_GPIO_PORT, 0, BRD_LED_YELLOW_PORTPIN, IO_OUTPUT);		// set pin direction
00013e  2301              MOVS     r3,#1
000140  2212              MOVS     r2,#0x12
000142  2100              MOVS     r1,#0
000144  2005              MOVS     r0,#5
000146  0740              LSLS     r0,r0,#29
000148  f7fffffe          BL       Chip_GPIO_SetPinDIR
;;;94     	Chip_IOCON_PinSetOpenDrainMode(LPC_IOCON, IOCON_PIO(BRD_LED_YELLOW_PORTPIN), true);	// set mode as opendrain
00014c  2201              MOVS     r2,#1
00014e  211e              MOVS     r1,#0x1e
000150  4804              LDR      r0,|L4.356|
000152  f7fffffe          BL       Chip_IOCON_PinSetOpenDrainMode
;;;95     	
;;;96     	Chip_Clock_DisablePeriphClock(SYSCTL_CLOCK_SWM);								// Disable CLK for SWM Block
000156  2007              MOVS     r0,#7
000158  f7fffffe          BL       Chip_Clock_DisablePeriphClock
;;;97     	Chip_Clock_DisablePeriphClock(SYSCTL_CLOCK_IOCON);								// Disable CLK for IOCON Block
00015c  2012              MOVS     r0,#0x12
00015e  f7fffffe          BL       Chip_Clock_DisablePeriphClock
;;;98     }	
000162  bd10              POP      {r4,pc}
;;;99     
                          ENDP

                  |L4.356|
                          DCD      0x40044000

                          AREA ||i.Board_UART_Init||, CODE, READONLY, ALIGN=2

                  Board_UART_Init PROC
;;;19     // ------------------------------------------------------------------------------------------------------
;;;20     void Board_UART_Init(void)
000000  b510              PUSH     {r4,lr}
;;;21     {
;;;22     	Chip_UART_Init(CFG_UART_PTRPERI);												// Enable periph. clock and reset it
000002  4816              LDR      r0,|L5.92|
000004  f7fffffe          BL       Chip_UART_Init
;;;23     	
;;;24     	// Set UART comm parameters:
;;;25     	Chip_UART_ConfigData(CFG_UART_PTRPERI, CFG_UART_PARITY | CFG_UART_DATABITS | CFG_UART_STOPBITS);	// configure
000008  2004              MOVS     r0,#4
00000a  4a14              LDR      r2,|L5.92|
00000c  6812              LDR      r2,[r2,#0]
00000e  4b14              LDR      r3,|L5.96|
000010  401a              ANDS     r2,r2,r3
000012  4611              MOV      r1,r2
000014  460a              MOV      r2,r1
000016  4302              ORRS     r2,r2,r0
000018  4b10              LDR      r3,|L5.92|
00001a  601a              STR      r2,[r3,#0]
00001c  bf00              NOP      
;;;26     	
;;;27     	Chip_Clock_SetUSARTNBaseClockRate( CFG_UART_BAUDRATE * 8, true);				// *16 is oversample BaudRate
00001e  2101              MOVS     r1,#1
000020  204b              MOVS     r0,#0x4b
000022  0280              LSLS     r0,r0,#10
000024  f7fffffe          BL       Chip_Clock_SetUSARTNBaseClockRate
;;;28     
;;;29     	Chip_UART_SetBaud (CFG_UART_PTRPERI, CFG_UART_BAUDRATE);						// And write new BaudRate
000028  214b              MOVS     r1,#0x4b
00002a  01c9              LSLS     r1,r1,#7
00002c  480b              LDR      r0,|L5.92|
00002e  f7fffffe          BL       Chip_UART_SetBaud
;;;30     
;;;31     	Chip_UART_TXEnable(CFG_UART_PTRPERI);											// Enable Transmit
000032  bf00              NOP      
000034  4809              LDR      r0,|L5.92|
000036  6840              LDR      r0,[r0,#4]
000038  490a              LDR      r1,|L5.100|
00003a  4008              ANDS     r0,r0,r1
00003c  4907              LDR      r1,|L5.92|
00003e  6048              STR      r0,[r1,#4]
000040  bf00              NOP      
;;;32     	Chip_UART_Enable(CFG_UART_PTRPERI);												// Enable UART
000042  bf00              NOP      
000044  4608              MOV      r0,r1
000046  6800              LDR      r0,[r0,#0]
000048  4905              LDR      r1,|L5.96|
00004a  317c              ADDS     r1,r1,#0x7c
00004c  4008              ANDS     r0,r0,r1
00004e  2101              MOVS     r1,#1
000050  4308              ORRS     r0,r0,r1
000052  4902              LDR      r1,|L5.92|
000054  6008              STR      r0,[r1,#0]
000056  bf00              NOP      
;;;33     }
000058  bd10              POP      {r4,pc}
;;;34     
                          ENDP

00005a  0000              DCW      0x0000
                  |L5.92|
                          DCD      0x40064000
                  |L5.96|
                          DCD      0x00fcda01
                  |L5.100|
                          DCD      0x00010306

                          AREA ||i.Chip_Clock_DisablePeriphClock||, CODE, READONLY, ALIGN=2

                  Chip_Clock_DisablePeriphClock PROC
;;;209     */
;;;210    STATIC INLINE void Chip_Clock_DisablePeriphClock(CHIP_SYSCTL_CLOCK_T clk)
000000  4904              LDR      r1,|L6.20|
;;;211    {
;;;212    	LPC_SYSCTL->SYSAHBCLKCTRL &= ~((1 << clk) | SYSCTL_SYSAHBCLKCTRL_RESERVED);
000002  680a              LDR      r2,[r1,#0]
000004  2101              MOVS     r1,#1
000006  4081              LSLS     r1,r1,r0
000008  4b03              LDR      r3,|L6.24|
00000a  4319              ORRS     r1,r1,r3
00000c  438a              BICS     r2,r2,r1
00000e  4901              LDR      r1,|L6.20|
000010  600a              STR      r2,[r1,#0]
;;;213    }
000012  4770              BX       lr
;;;214    
                          ENDP

                  |L6.20|
                          DCD      0x40048080
                  |L6.24|
                          DCD      0xda100000

                          AREA ||i.Chip_Clock_EnablePeriphClock||, CODE, READONLY, ALIGN=2

                  Chip_Clock_EnablePeriphClock PROC
;;;199     */
;;;200    STATIC INLINE void Chip_Clock_EnablePeriphClock(CHIP_SYSCTL_CLOCK_T clk)
000000  2101              MOVS     r1,#1
;;;201    {
;;;202    	LPC_SYSCTL->SYSAHBCLKCTRL = (1 << clk) | (LPC_SYSCTL->SYSAHBCLKCTRL & ~SYSCTL_SYSAHBCLKCTRL_RESERVED);
000002  4081              LSLS     r1,r1,r0
000004  4a03              LDR      r2,|L7.20|
000006  6812              LDR      r2,[r2,#0]
000008  4b03              LDR      r3,|L7.24|
00000a  401a              ANDS     r2,r2,r3
00000c  4311              ORRS     r1,r1,r2
00000e  4a01              LDR      r2,|L7.20|
000010  6011              STR      r1,[r2,#0]
;;;203    }
000012  4770              BX       lr
;;;204    
                          ENDP

                  |L7.20|
                          DCD      0x40048080
                  |L7.24|
                          DCD      0x25efffff

                          AREA ||i.Chip_GPIO_SetPinDIR||, CODE, READONLY, ALIGN=1

                  Chip_GPIO_SetPinDIR PROC
;;;205     */
;;;206    STATIC INLINE void Chip_GPIO_SetPinDIR(LPC_GPIO_T *pGPIO, uint8_t port, uint8_t pin, bool output)
000000  b570              PUSH     {r4-r6,lr}
;;;207    {
000002  461e              MOV      r6,r3
;;;208    	if (output) {
000004  2e00              CMP      r6,#0
000006  d009              BEQ      |L8.28|
;;;209    		Chip_GPIO_SetPinDIROutput(pGPIO, port, pin);
000008  bf00              NOP      
00000a  2301              MOVS     r3,#1
00000c  4093              LSLS     r3,r3,r2
00000e  008c              LSLS     r4,r1,#2
000010  2547              MOVS     r5,#0x47
000012  01ed              LSLS     r5,r5,#7
000014  1945              ADDS     r5,r0,r5
000016  512b              STR      r3,[r5,r4]
000018  bf00              NOP      
00001a  e009              B        |L8.48|
                  |L8.28|
;;;210    	}
;;;211    	else {
;;;212    		Chip_GPIO_SetPinDIRInput(pGPIO, port, pin);
00001c  bf00              NOP      
00001e  2301              MOVS     r3,#1
000020  4093              LSLS     r3,r3,r2
000022  008c              LSLS     r4,r1,#2
000024  2509              MOVS     r5,#9
000026  02ad              LSLS     r5,r5,#10
000028  1945              ADDS     r5,r0,r5
00002a  512b              STR      r3,[r5,r4]
00002c  bf00              NOP      
00002e  bf00              NOP      
                  |L8.48|
;;;213    	}
;;;214    }
000030  bd70              POP      {r4-r6,pc}
;;;215    
                          ENDP


                          AREA ||i.Chip_GPIO_SetPinState||, CODE, READONLY, ALIGN=1

                  Chip_GPIO_SetPinState PROC
;;;98      */
;;;99     STATIC INLINE void Chip_GPIO_SetPinState(LPC_GPIO_T *pGPIO, uint8_t port, uint8_t pin, bool setting)
000000  b510              PUSH     {r4,lr}
;;;100    {
;;;101    	pGPIO->B[port][pin] = setting;
000002  014c              LSLS     r4,r1,#5
000004  1824              ADDS     r4,r4,r0
000006  54a3              STRB     r3,[r4,r2]
;;;102    }
000008  bd10              POP      {r4,pc}
;;;103    
                          ENDP


                          AREA ||i.__NVIC_SetPriority||, CODE, READONLY, ALIGN=2

                  __NVIC_SetPriority PROC
;;;839     */
;;;840    __STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
000000  b510              PUSH     {r4,lr}
;;;841    {
;;;842      if ((int32_t)(IRQn) >= 0)
000002  2800              CMP      r0,#0
000004  db19              BLT      |L10.58|
;;;843      {
;;;844        NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
000006  4a1a              LDR      r2,|L10.112|
000008  2303              MOVS     r3,#3
00000a  021b              LSLS     r3,r3,#8
00000c  18d2              ADDS     r2,r2,r3
00000e  0883              LSRS     r3,r0,#2
000010  009b              LSLS     r3,r3,#2
000012  58d2              LDR      r2,[r2,r3]
000014  0783              LSLS     r3,r0,#30
000016  0edc              LSRS     r4,r3,#27
000018  23ff              MOVS     r3,#0xff
00001a  40a3              LSLS     r3,r3,r4
00001c  439a              BICS     r2,r2,r3
00001e  078b              LSLS     r3,r1,#30
000020  0e1b              LSRS     r3,r3,#24
000022  0784              LSLS     r4,r0,#30
000024  0ee4              LSRS     r4,r4,#27
000026  40a3              LSLS     r3,r3,r4
000028  431a              ORRS     r2,r2,r3
00002a  4b11              LDR      r3,|L10.112|
00002c  2403              MOVS     r4,#3
00002e  0224              LSLS     r4,r4,#8
000030  191b              ADDS     r3,r3,r4
000032  0884              LSRS     r4,r0,#2
000034  00a4              LSLS     r4,r4,#2
000036  511a              STR      r2,[r3,r4]
000038  e018              B        |L10.108|
                  |L10.58|
;;;845           (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
;;;846      }
;;;847      else
;;;848      {
;;;849        SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
00003a  4a0e              LDR      r2,|L10.116|
00003c  0703              LSLS     r3,r0,#28
00003e  0f1b              LSRS     r3,r3,#28
000040  3b08              SUBS     r3,r3,#8
000042  089b              LSRS     r3,r3,#2
000044  009b              LSLS     r3,r3,#2
000046  58d2              LDR      r2,[r2,r3]
000048  0783              LSLS     r3,r0,#30
00004a  0edc              LSRS     r4,r3,#27
00004c  23ff              MOVS     r3,#0xff
00004e  40a3              LSLS     r3,r3,r4
000050  439a              BICS     r2,r2,r3
000052  078b              LSLS     r3,r1,#30
000054  0e1b              LSRS     r3,r3,#24
000056  0784              LSLS     r4,r0,#30
000058  0ee4              LSRS     r4,r4,#27
00005a  40a3              LSLS     r3,r3,r4
00005c  431a              ORRS     r2,r2,r3
00005e  4b05              LDR      r3,|L10.116|
000060  0704              LSLS     r4,r0,#28
000062  0f24              LSRS     r4,r4,#28
000064  3c08              SUBS     r4,r4,#8
000066  08a4              LSRS     r4,r4,#2
000068  00a4              LSLS     r4,r4,#2
00006a  511a              STR      r2,[r3,r4]
                  |L10.108|
;;;850           (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
;;;851      }
;;;852    }
00006c  bd10              POP      {r4,pc}
;;;853    
                          ENDP

00006e  0000              DCW      0x0000
                  |L10.112|
                          DCD      0xe000e100
                  |L10.116|
                          DCD      0xe000ed1c

                          AREA ||.constdata||, DATA, READONLY, ALIGN=2

                  OscRateIn
                          DCD      0x00b71b00
                  ExtRateIn
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "Hardware\\brd_BOKRA_LPC824_Lite.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___23_brd_BOKRA_LPC824_Lite_c_bb476961____REV16|
#line 465 ".\\_CMSIS\\v5.20\\Include\\cmsis_armcc.h"
|__asm___23_brd_BOKRA_LPC824_Lite_c_bb476961____REV16| PROC
#line 466

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___23_brd_BOKRA_LPC824_Lite_c_bb476961____REVSH|
#line 480
|__asm___23_brd_BOKRA_LPC824_Lite_c_bb476961____REVSH| PROC
#line 481

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
