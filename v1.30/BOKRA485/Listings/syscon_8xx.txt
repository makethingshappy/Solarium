; generated by Component: ARM Compiler 5.06 update 3 (build 300) Tool: ArmCC [4d35f0]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\objects\syscon_8xx.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\syscon_8xx.d --cpu=Cortex-M0+ --apcs=interwork -O0 --diag_suppress=9931 -I..\BOKRA485 -I.\_CMSIS\v5.20\Include -I.\lpc_chip_82x\inc -I.\Hardware -IC:\Users\Peter\Documents\Projects\Workspace-Keil\LPC824\BOKRA485\v1.30\BOKRA485\RTE -IC:\Keil_v5\ARM\PACK\Keil\LPC800_DFP\1.10.1\Device\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=521 -DLPC824M201JHI33 -DCORE_M0PLUS --omf_browse=.\objects\syscon_8xx.crf lpc_chip_82x\src\syscon_8xx.c]
                          THUMB

                          AREA ||i.Chip_SYSCTL_PowerDown||, CODE, READONLY, ALIGN=2

                  Chip_SYSCTL_PowerDown PROC
;;;79     /* Power down one or more blocks or peripherals */
;;;80     void Chip_SYSCTL_PowerDown(uint32_t powerdownmask)
000000  4a06              LDR      r2,|L1.28|
;;;81     {
;;;82     	uint32_t pdrun;
;;;83     
;;;84     	/* Get current power states */
;;;85     	pdrun = LPC_SYSCTL->PDRUNCFG & PDWAKEUPDATMASK;
000002  6b92              LDR      r2,[r2,#0x38]
000004  4b06              LDR      r3,|L1.32|
000006  401a              ANDS     r2,r2,r3
000008  4611              MOV      r1,r2
;;;86     
;;;87     	/* Disable peripheral states by setting high */
;;;88     	pdrun |= (powerdownmask & PDWAKEUPDATMASK);
00000a  461a              MOV      r2,r3
00000c  4002              ANDS     r2,r2,r0
00000e  4311              ORRS     r1,r1,r2
;;;89     
;;;90     	/* Update power states with required register bits */
;;;91     	LPC_SYSCTL->PDRUNCFG = (PDWAKEUPWRMASK | pdrun);
000010  226d              MOVS     r2,#0x6d
000012  0212              LSLS     r2,r2,#8
000014  430a              ORRS     r2,r2,r1
000016  4b01              LDR      r3,|L1.28|
000018  639a              STR      r2,[r3,#0x38]
;;;92     }
00001a  4770              BX       lr
;;;93     
                          ENDP

                  |L1.28|
                          DCD      0x40048200
                  |L1.32|
                          DCD      0x000080ff

                          AREA ||i.Chip_SYSCTL_PowerUp||, CODE, READONLY, ALIGN=2

                  Chip_SYSCTL_PowerUp PROC
;;;94     /* Power up one or more blocks or peripherals */
;;;95     void Chip_SYSCTL_PowerUp(uint32_t powerupmask)
000000  4601              MOV      r1,r0
;;;96     {
;;;97     	uint32_t pdrun;
;;;98     
;;;99     	/* Get current power states */
;;;100    	pdrun = LPC_SYSCTL->PDRUNCFG & PDWAKEUPDATMASK;
000002  4a08              LDR      r2,|L2.36|
000004  6b92              LDR      r2,[r2,#0x38]
000006  4b08              LDR      r3,|L2.40|
000008  401a              ANDS     r2,r2,r3
00000a  4610              MOV      r0,r2
;;;101    
;;;102    	/* Enable peripheral states by setting low */
;;;103    	pdrun &= ~(powerupmask & PDWAKEUPDATMASK);
00000c  461a              MOV      r2,r3
00000e  400a              ANDS     r2,r2,r1
000010  4603              MOV      r3,r0
000012  4393              BICS     r3,r3,r2
000014  4618              MOV      r0,r3
;;;104    
;;;105    	/* Update power states with required register bits */
;;;106    	LPC_SYSCTL->PDRUNCFG = (PDWAKEUPWRMASK | pdrun);
000016  226d              MOVS     r2,#0x6d
000018  0212              LSLS     r2,r2,#8
00001a  4302              ORRS     r2,r2,r0
00001c  4b01              LDR      r3,|L2.36|
00001e  639a              STR      r2,[r3,#0x38]
;;;107    }
000020  4770              BX       lr
                          ENDP

000022  0000              DCW      0x0000
                  |L2.36|
                          DCD      0x40048200
                  |L2.40|
                          DCD      0x000080ff

                          AREA ||i.Chip_SYSCTL_SetDeepSleepPD||, CODE, READONLY, ALIGN=2

                  Chip_SYSCTL_SetDeepSleepPD PROC
;;;65     /* Setup deep sleep behaviour for power down */
;;;66     void Chip_SYSCTL_SetDeepSleepPD(uint32_t sleepmask)
000000  2148              MOVS     r1,#0x48
;;;67     {
;;;68     	/* Update new value */
;;;69     	LPC_SYSCTL->PDSLEEPCFG = PDSLEEPWRMASK | (sleepmask & PDSLEEPDATMASK);
000002  4001              ANDS     r1,r1,r0
000004  4a02              LDR      r2,|L3.16|
000006  4311              ORRS     r1,r1,r2
000008  4a02              LDR      r2,|L3.20|
00000a  6311              STR      r1,[r2,#0x30]
;;;70     }
00000c  4770              BX       lr
;;;71     
                          ENDP

00000e  0000              DCW      0x0000
                  |L3.16|
                          DCD      0x0000ffb7
                  |L3.20|
                          DCD      0x40048200

                          AREA ||i.Chip_SYSCTL_SetWakeup||, CODE, READONLY, ALIGN=2

                  Chip_SYSCTL_SetWakeup PROC
;;;72     /* Setup wakeup behaviour from deep sleep */
;;;73     void Chip_SYSCTL_SetWakeup(uint32_t wakeupmask)
000000  4903              LDR      r1,|L4.16|
;;;74     {
;;;75     	/* Update new value */
;;;76     	LPC_SYSCTL->PDAWAKECFG = PDWAKEUPWRMASK | (wakeupmask & PDWAKEUPDATMASK);
000002  4001              ANDS     r1,r1,r0
000004  226d              MOVS     r2,#0x6d
000006  0212              LSLS     r2,r2,#8
000008  4311              ORRS     r1,r1,r2
00000a  4a02              LDR      r2,|L4.20|
00000c  6351              STR      r1,[r2,#0x34]
;;;77     }
00000e  4770              BX       lr
;;;78     
                          ENDP

                  |L4.16|
                          DCD      0x000080ff
                  |L4.20|
                          DCD      0x40048200

;*** Start embedded assembler ***

#line 1 "lpc_chip_82x\\src\\syscon_8xx.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___12_syscon_8xx_c_89326d4c____REV16|
#line 465 ".\\_CMSIS\\v5.20\\Include\\cmsis_armcc.h"
|__asm___12_syscon_8xx_c_89326d4c____REV16| PROC
#line 466

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___12_syscon_8xx_c_89326d4c____REVSH|
#line 480
|__asm___12_syscon_8xx_c_89326d4c____REVSH| PROC
#line 481

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
