; generated by Component: ARM Compiler 5.06 update 3 (build 300) Tool: ArmCC [4d35f0]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\objects\i2cs_8xx.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\i2cs_8xx.d --cpu=Cortex-M0+ --apcs=interwork -O0 --diag_suppress=9931 -I..\BOKRA485 -I.\_CMSIS\v5.20\Include -I.\lpc_chip_82x\inc -I.\Hardware -IC:\Users\Peter\Documents\Projects\Workspace-Keil\LPC824\BOKRA485\v1.30\BOKRA485\RTE -IC:\Keil_v5\ARM\PACK\Keil\LPC800_DFP\1.10.1\Device\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=521 -DLPC824M201JHI33 -DCORE_M0PLUS --omf_browse=.\objects\i2cs_8xx.crf lpc_chip_82x\src\i2cs_8xx.c]
                          THUMB

                          AREA ||i.Chip_I2CS_XferHandler||, CODE, READONLY, ALIGN=2

                  Chip_I2CS_XferHandler PROC
;;;50     /* Slave transfer state change handler */
;;;51     uint32_t Chip_I2CS_XferHandler(LPC_I2C_T *pI2C, const I2CS_XFER_T *xfers)
000000  b5f8              PUSH     {r3-r7,lr}
;;;52     {
000002  4604              MOV      r4,r0
000004  460d              MOV      r5,r1
;;;53     	uint32_t done = 0;
000006  2700              MOVS     r7,#0
;;;54     
;;;55     	uint8_t data;
;;;56     	uint32_t state;
;;;57     
;;;58     	/* transfer complete? */
;;;59     	if ((Chip_I2C_GetPendingInt(pI2C) & I2C_INTENSET_SLVDESEL) != 0) {
000008  bf00              NOP      
00000a  69a0              LDR      r0,[r4,#0x18]
00000c  4928              LDR      r1,|L1.176|
00000e  4008              ANDS     r0,r0,r1
000010  2101              MOVS     r1,#1
000012  03c9              LSLS     r1,r1,#15
000014  4008              ANDS     r0,r0,r1
000016  2800              CMP      r0,#0
000018  d006              BEQ      |L1.40|
;;;60     		Chip_I2CS_ClearStatus(pI2C, I2C_STAT_SLVDESEL);
00001a  4608              MOV      r0,r1
00001c  4001              ANDS     r1,r1,r0
00001e  6061              STR      r1,[r4,#4]
000020  bf00              NOP      
;;;61     		xfers->slaveDone();
000022  68e8              LDR      r0,[r5,#0xc]
000024  4780              BLX      r0
000026  e034              B        |L1.146|
                  |L1.40|
;;;62     	}
;;;63     	else {
;;;64     		/* Determine the current I2C slave state */
;;;65     		state = Chip_I2CS_GetSlaveState(pI2C);
000028  bf00              NOP      
00002a  6860              LDR      r0,[r4,#4]
00002c  2103              MOVS     r1,#3
00002e  0249              LSLS     r1,r1,#9
000030  4008              ANDS     r0,r0,r1
000032  0a46              LSRS     r6,r0,#9
000034  bf00              NOP      
;;;66     
;;;67     		switch (state) {
000036  2e00              CMP      r6,#0
000038  d004              BEQ      |L1.68|
00003a  2e01              CMP      r6,#1
00003c  d015              BEQ      |L1.106|
00003e  2e02              CMP      r6,#2
000040  d126              BNE      |L1.144|
000042  e01c              B        |L1.126|
                  |L1.68|
;;;68     		case I2C_STAT_SLVCODE_ADDR:		/* Slave address received */
;;;69     			/* Get slave address that needs servicing */
;;;70     			data = Chip_I2CS_GetSlaveAddr(pI2C, Chip_I2CS_GetSlaveMatchIndex(pI2C));
000044  bf00              NOP      
000046  6861              LDR      r1,[r4,#4]
000048  2203              MOVS     r2,#3
00004a  0312              LSLS     r2,r2,#12
00004c  4011              ANDS     r1,r1,r2
00004e  0b08              LSRS     r0,r1,#12
000050  bf00              NOP      
000052  0081              LSLS     r1,r0,#2
000054  4622              MOV      r2,r4
000056  3248              ADDS     r2,r2,#0x48
000058  5851              LDR      r1,[r2,r1]
00005a  0609              LSLS     r1,r1,#24
00005c  0e49              LSRS     r1,r1,#25
00005e  9100              STR      r1,[sp,#0]
;;;71     
;;;72     			/* Call address callback */
;;;73     			xfers->slaveStart(data);
000060  4668              MOV      r0,sp
000062  7800              LDRB     r0,[r0,#0]
000064  6829              LDR      r1,[r5,#0]
000066  4788              BLX      r1
;;;74     			break;
000068  e012              B        |L1.144|
                  |L1.106|
;;;75     
;;;76     		case I2C_STAT_SLVCODE_RX:		/* Data byte received */
;;;77     			/* Get received data */
;;;78     			data = Chip_I2CS_ReadByte(pI2C);
00006a  bf00              NOP      
00006c  6c60              LDR      r0,[r4,#0x44]
00006e  b2c0              UXTB     r0,r0
000070  9000              STR      r0,[sp,#0]
;;;79     			done = xfers->slaveRecv(data);
000072  4668              MOV      r0,sp
000074  7800              LDRB     r0,[r0,#0]
000076  68a9              LDR      r1,[r5,#8]
000078  4788              BLX      r1
00007a  4607              MOV      r7,r0
;;;80     			break;
00007c  e008              B        |L1.144|
                  |L1.126|
;;;81     
;;;82     		case I2C_STAT_SLVCODE_TX:		/* Get byte that needs to be sent */
;;;83     			/* Get data to send */
;;;84     			done = xfers->slaveSend(&data);
00007e  4668              MOV      r0,sp
000080  6869              LDR      r1,[r5,#4]
000082  4788              BLX      r1
000084  4607              MOV      r7,r0
;;;85     			Chip_I2CS_WriteByte(pI2C, data);
000086  4669              MOV      r1,sp
000088  7808              LDRB     r0,[r1,#0]
00008a  6460              STR      r0,[r4,#0x44]
00008c  bf00              NOP      
;;;86     			break;
00008e  bf00              NOP      
                  |L1.144|
000090  bf00              NOP                            ;74
                  |L1.146|
;;;87     		}
;;;88     	}
;;;89     
;;;90     	if (done == 0) {
000092  2f00              CMP      r7,#0
000094  d104              BNE      |L1.160|
;;;91     		Chip_I2CS_SlaveContinue(pI2C);
000096  bf00              NOP      
000098  2001              MOVS     r0,#1
00009a  6420              STR      r0,[r4,#0x40]
00009c  bf00              NOP      
00009e  e004              B        |L1.170|
                  |L1.160|
;;;92     	}
;;;93     	else {
;;;94     		Chip_I2CS_SlaveNACK(pI2C);
0000a0  bf00              NOP      
0000a2  2002              MOVS     r0,#2
0000a4  6420              STR      r0,[r4,#0x40]
0000a6  bf00              NOP      
0000a8  bf00              NOP      
                  |L1.170|
;;;95     	}
;;;96     
;;;97     	return done;
0000aa  4638              MOV      r0,r7
;;;98     }
0000ac  bdf8              POP      {r3-r7,pc}
                          ENDP

0000ae  0000              DCW      0x0000
                  |L1.176|
                          DCD      0x030b8951

;*** Start embedded assembler ***

#line 1 "lpc_chip_82x\\src\\i2cs_8xx.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___10_i2cs_8xx_c_fb063d30____REV16|
#line 465 ".\\_CMSIS\\v5.20\\Include\\cmsis_armcc.h"
|__asm___10_i2cs_8xx_c_fb063d30____REV16| PROC
#line 466

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___10_i2cs_8xx_c_fb063d30____REVSH|
#line 480
|__asm___10_i2cs_8xx_c_fb063d30____REVSH| PROC
#line 481

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
