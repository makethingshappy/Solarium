; generated by Component: ARM Compiler 5.06 update 3 (build 300) Tool: ArmCC [4d35f0]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\objects\stopwatch_8xx.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\stopwatch_8xx.d --cpu=Cortex-M0+ --apcs=interwork -O0 --diag_suppress=9931 -I..\BOKRA485 -I.\_CMSIS\v5.20\Include -I.\lpc_chip_82x\inc -I.\Hardware -IC:\Users\Peter\Documents\Projects\Workspace-Keil\LPC824\BOKRA485\v1.30\BOKRA485\RTE -IC:\Keil_v5\ARM\PACK\Keil\LPC800_DFP\1.10.1\Device\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=521 -DLPC824M201JHI33 -DCORE_M0PLUS --omf_browse=.\objects\stopwatch_8xx.crf lpc_chip_82x\src\stopwatch_8xx.c]
                          THUMB

                          AREA ||i.StopWatch_Init||, CODE, READONLY, ALIGN=2

                  StopWatch_Init PROC
;;;56     /* Initialize stopwatch */
;;;57     void StopWatch_Init(void)
000000  b510              PUSH     {r4,lr}
;;;58     {
;;;59     	Chip_MRT_Init();
000002  bf00              NOP      
000004  200a              MOVS     r0,#0xa
000006  2101              MOVS     r1,#1
000008  4081              LSLS     r1,r1,r0
00000a  4a25              LDR      r2,|L1.160|
00000c  6812              LDR      r2,[r2,#0]
00000e  4b25              LDR      r3,|L1.164|
000010  401a              ANDS     r2,r2,r3
000012  4311              ORRS     r1,r1,r2
000014  4a22              LDR      r2,|L1.160|
000016  6011              STR      r1,[r2,#0]
000018  bf00              NOP      
00001a  2007              MOVS     r0,#7
00001c  bf00              NOP      
00001e  4920              LDR      r1,|L1.160|
000020  3980              SUBS     r1,r1,#0x80
000022  684a              LDR      r2,[r1,#4]
000024  2101              MOVS     r1,#1
000026  4081              LSLS     r1,r1,r0
000028  4b1f              LDR      r3,|L1.168|
00002a  4319              ORRS     r1,r1,r3
00002c  438a              BICS     r2,r2,r1
00002e  491c              LDR      r1,|L1.160|
000030  3980              SUBS     r1,r1,#0x80
000032  604a              STR      r2,[r1,#4]
000034  bf00              NOP      
000036  bf00              NOP      
000038  2101              MOVS     r1,#1
00003a  4081              LSLS     r1,r1,r0
00003c  4a18              LDR      r2,|L1.160|
00003e  3a80              SUBS     r2,r2,#0x80
000040  6852              LDR      r2,[r2,#4]
000042  43db              MVNS     r3,r3
000044  401a              ANDS     r2,r2,r3
000046  4311              ORRS     r1,r1,r2
000048  4a15              LDR      r2,|L1.160|
00004a  3a80              SUBS     r2,r2,#0x80
00004c  6051              STR      r1,[r2,#4]
00004e  bf00              NOP      
000050  bf00              NOP      
000052  bf00              NOP      
;;;60     	Chip_MRT_SetMode(LPC_MRT_CH1, MRT_MODE_REPEAT);
000054  2000              MOVS     r0,#0
000056  4a15              LDR      r2,|L1.172|
000058  6892              LDR      r2,[r2,#8]
00005a  07d1              LSLS     r1,r2,#31
00005c  0fc9              LSRS     r1,r1,#31
00005e  460a              MOV      r2,r1
000060  4302              ORRS     r2,r2,r0
000062  4b12              LDR      r3,|L1.172|
000064  609a              STR      r2,[r3,#8]
000066  bf00              NOP      
;;;61     	Chip_MRT_SetInterval(LPC_MRT_CH1, 0x7ffffff | MRT_INTVAL_LOAD);
000068  4811              LDR      r0,|L1.176|
00006a  4619              MOV      r1,r3
00006c  6008              STR      r0,[r1,#0]
00006e  bf00              NOP      
;;;62     	Chip_MRT_GetEnabled(LPC_MRT_CH1);
000070  bf00              NOP      
000072  4608              MOV      r0,r1
000074  6880              LDR      r0,[r0,#8]
;;;63     
;;;64     	/* Pre-compute tick rate. */
;;;65     	ticksPerSecond = Chip_Clock_GetSystemClockRate();
000076  f7fffffe          BL       Chip_Clock_GetSystemClockRate
00007a  490e              LDR      r1,|L1.180|
00007c  6008              STR      r0,[r1,#0]  ; ticksPerSecond
;;;66     	ticksPerMs = ticksPerSecond / 1000;
00007e  217d              MOVS     r1,#0x7d
000080  00c9              LSLS     r1,r1,#3
000082  480c              LDR      r0,|L1.180|
000084  6800              LDR      r0,[r0,#0]  ; ticksPerSecond
000086  f7fffffe          BL       __aeabi_uidivmod
00008a  490b              LDR      r1,|L1.184|
00008c  6008              STR      r0,[r1,#0]  ; ticksPerMs
;;;67     	ticksPerUs = ticksPerSecond / 1000000;
00008e  490b              LDR      r1,|L1.188|
000090  4808              LDR      r0,|L1.180|
000092  6800              LDR      r0,[r0,#0]  ; ticksPerSecond
000094  f7fffffe          BL       __aeabi_uidivmod
000098  4909              LDR      r1,|L1.192|
00009a  6008              STR      r0,[r1,#0]  ; ticksPerUs
;;;68     }
00009c  bd10              POP      {r4,pc}
;;;69     
                          ENDP

00009e  0000              DCW      0x0000
                  |L1.160|
                          DCD      0x40048080
                  |L1.164|
                          DCD      0x25efffff
                  |L1.168|
                          DCD      0xfffe2000
                  |L1.172|
                          DCD      0x40004010
                  |L1.176|
                          DCD      0x87ffffff
                  |L1.180|
                          DCD      ticksPerSecond
                  |L1.184|
                          DCD      ticksPerMs
                  |L1.188|
                          DCD      0x000f4240
                  |L1.192|
                          DCD      ticksPerUs

                          AREA ||i.StopWatch_MsToTicks||, CODE, READONLY, ALIGN=2

                  StopWatch_MsToTicks PROC
;;;95     /* Converts from mS to stopwatch ticks. */
;;;96     uint32_t StopWatch_MsToTicks(uint32_t mS)
000000  4601              MOV      r1,r0
;;;97     {
;;;98     	return mS * ticksPerMs;
000002  4802              LDR      r0,|L2.12|
000004  6800              LDR      r0,[r0,#0]  ; ticksPerMs
000006  4348              MULS     r0,r1,r0
;;;99     }
000008  4770              BX       lr
;;;100    
                          ENDP

00000a  0000              DCW      0x0000
                  |L2.12|
                          DCD      ticksPerMs

                          AREA ||i.StopWatch_Start||, CODE, READONLY, ALIGN=2

                  StopWatch_Start PROC
;;;70     /* Start a stopwatch */
;;;71     uint32_t StopWatch_Start(void)
000000  bf00              NOP      
000002  4802              LDR      r0,|L3.12|
000004  6840              LDR      r0,[r0,#4]
;;;72     {
;;;73     	/* Return the current timer count. */
;;;74     	return 0x7ffffff - Chip_MRT_GetTimer(LPC_MRT_CH1);
000006  4902              LDR      r1,|L3.16|
000008  1a08              SUBS     r0,r1,r0
;;;75     }
00000a  4770              BX       lr
;;;76     
                          ENDP

                  |L3.12|
                          DCD      0x40004010
                  |L3.16|
                          DCD      0x07ffffff

                          AREA ||i.StopWatch_TicksPerSecond||, CODE, READONLY, ALIGN=2

                  StopWatch_TicksPerSecond PROC
;;;77     /* Returns number of ticks per second of the stopwatch timer */
;;;78     uint32_t StopWatch_TicksPerSecond(void)
000000  4801              LDR      r0,|L4.8|
;;;79     {
;;;80     	return ticksPerSecond;
000002  6800              LDR      r0,[r0,#0]  ; ticksPerSecond
;;;81     }
000004  4770              BX       lr
;;;82     
                          ENDP

000006  0000              DCW      0x0000
                  |L4.8|
                          DCD      ticksPerSecond

                          AREA ||i.StopWatch_TicksToMs||, CODE, READONLY, ALIGN=2

                  StopWatch_TicksToMs PROC
;;;83     /* Converts from stopwatch ticks to mS. */
;;;84     uint32_t StopWatch_TicksToMs(uint32_t ticks)
000000  b510              PUSH     {r4,lr}
;;;85     {
000002  4604              MOV      r4,r0
;;;86     	return ticks / ticksPerMs;
000004  4802              LDR      r0,|L5.16|
000006  6801              LDR      r1,[r0,#0]  ; ticksPerMs
000008  4620              MOV      r0,r4
00000a  f7fffffe          BL       __aeabi_uidivmod
;;;87     }
00000e  bd10              POP      {r4,pc}
;;;88     
                          ENDP

                  |L5.16|
                          DCD      ticksPerMs

                          AREA ||i.StopWatch_TicksToUs||, CODE, READONLY, ALIGN=2

                  StopWatch_TicksToUs PROC
;;;89     /* Converts from stopwatch ticks to uS. */
;;;90     uint32_t StopWatch_TicksToUs(uint32_t ticks)
000000  b510              PUSH     {r4,lr}
;;;91     {
000002  4604              MOV      r4,r0
;;;92     	return ticks / ticksPerUs;
000004  4802              LDR      r0,|L6.16|
000006  6801              LDR      r1,[r0,#0]  ; ticksPerUs
000008  4620              MOV      r0,r4
00000a  f7fffffe          BL       __aeabi_uidivmod
;;;93     }
00000e  bd10              POP      {r4,pc}
;;;94     
                          ENDP

                  |L6.16|
                          DCD      ticksPerUs

                          AREA ||i.StopWatch_UsToTicks||, CODE, READONLY, ALIGN=2

                  StopWatch_UsToTicks PROC
;;;101    /* Converts from uS to stopwatch ticks. */
;;;102    uint32_t StopWatch_UsToTicks(uint32_t uS)
000000  4601              MOV      r1,r0
;;;103    {
;;;104    	return uS * ticksPerUs;
000002  4802              LDR      r0,|L7.12|
000004  6800              LDR      r0,[r0,#0]  ; ticksPerUs
000006  4348              MULS     r0,r1,r0
;;;105    }
000008  4770              BX       lr
                          ENDP

00000a  0000              DCW      0x0000
                  |L7.12|
                          DCD      ticksPerUs

                          AREA ||.data||, DATA, ALIGN=2

                  ticksPerSecond
                          DCD      0x00000000
                  ticksPerMs
                          DCD      0x00000000
                  ticksPerUs
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "lpc_chip_82x\\src\\stopwatch_8xx.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___15_stopwatch_8xx_c_cf0aa0a6____REV16|
#line 465 ".\\_CMSIS\\v5.20\\Include\\cmsis_armcc.h"
|__asm___15_stopwatch_8xx_c_cf0aa0a6____REV16| PROC
#line 466

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___15_stopwatch_8xx_c_cf0aa0a6____REVSH|
#line 480
|__asm___15_stopwatch_8xx_c_cf0aa0a6____REVSH| PROC
#line 481

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
