; generated by Component: ARM Compiler 5.06 update 3 (build 300) Tool: ArmCC [4d35f0]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\objects\irc_8xx.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\irc_8xx.d --cpu=Cortex-M0+ --apcs=interwork -O0 --diag_suppress=9931 -I..\BOKRA485 -I.\_CMSIS\v5.20\Include -I.\lpc_chip_82x\inc -I.\Hardware -IC:\Users\Peter\Documents\Projects\Workspace-Keil\LPC824\BOKRA485\v1.30\BOKRA485\RTE -IC:\Keil_v5\ARM\PACK\Keil\LPC800_DFP\1.10.1\Device\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=521 -DLPC824M201JHI33 -DCORE_M0PLUS --omf_browse=.\objects\irc_8xx.crf lpc_chip_82x\src\irc_8xx.c]
                          THUMB

                          AREA ||i.Chip_FMC_SetFLASHAccess||, CODE, READONLY, ALIGN=2

                  Chip_FMC_SetFLASHAccess PROC
;;;76      */
;;;77     STATIC INLINE void Chip_FMC_SetFLASHAccess(FMC_FLASHTIM_T clks)
000000  4a03              LDR      r2,|L1.16|
;;;78     {
;;;79     	uint32_t tmp = LPC_FMC->FLASHCFG & (~((0x3)|FMC_FLASHCFG_RESERVED));
000002  6912              LDR      r2,[r2,#0x10]
000004  2100              MOVS     r1,#0
;;;80     
;;;81     	/* Don't alter upper bits */
;;;82     	LPC_FMC->FLASHCFG = tmp | clks;
000006  460a              MOV      r2,r1
000008  4302              ORRS     r2,r2,r0
00000a  4b01              LDR      r3,|L1.16|
00000c  611a              STR      r2,[r3,#0x10]
;;;83     }
00000e  4770              BX       lr
;;;84     
                          ENDP

                  |L1.16|
                          DCD      0x40040000

                          AREA ||i.Chip_IRC_SetFreq||, CODE, READONLY, ALIGN=2

                  Chip_IRC_SetFreq PROC
;;;167    
;;;168    bool Chip_IRC_SetFreq(uint32_t main, uint32_t sys)
000000  b5f3              PUSH     {r0,r1,r4-r7,lr}
;;;169    {
000002  b081              SUB      sp,sp,#4
000004  460d              MOV      r5,r1
;;;170    	uint16_t	freq_m = main/1000000;											/* main frequency in MHz */
000006  491d              LDR      r1,|L2.124|
000008  9801              LDR      r0,[sp,#4]
00000a  f7fffffe          BL       __aeabi_uidivmod
00000e  b280              UXTH     r0,r0
000010  9000              STR      r0,[sp,#0]
;;;171    	uint16_t	freq_s = sys/1000000;											/* system frequency in MHz */
000012  491a              LDR      r1,|L2.124|
000014  4628              MOV      r0,r5
000016  f7fffffe          BL       __aeabi_uidivmod
00001a  b286              UXTH     r6,r0
;;;172    	bool		found = false;													/* frequencies found */
00001c  2700              MOVS     r7,#0
;;;173    	uint32_t	i = 0;
00001e  2400              MOVS     r4,#0
;;;174    
;;;175    	if (freq_s > 30)															/* if system frequency is higher than 30MHz... */
000020  2e1e              CMP      r6,#0x1e
000022  dd01              BLE      |L2.40|
;;;176    		return false;															/* ...don't attempt to set it */
000024  2000              MOVS     r0,#0
                  |L2.38|
;;;177    	if (freq_m > 96)															/* if main frequency is higher than 96MHz... */
;;;178    		return false;															/* ...don't attempt to set it */
;;;179    	
;;;180    	for (i=0; i<config_tab_ct; i++) {											/* loop through table */
;;;181    		if ((freq_m == config_tab[i].freq_main) && (freq_s == config_tab[i].freq_sys)) {	/* attempt to find a match */
;;;182    			config_tab_idx = i;													/* save the data for later */
;;;183    			found = true;														/* set state to found */
;;;184    			break;																/* go config the PLL */
;;;185    		}
;;;186    	}
;;;187    	if (found == true) {														/* if a match has been found */
;;;188    		pll_config(&config_tab[config_tab_idx]);								/* configure the PLL */
;;;189    	}
;;;190    
;;;191    	return found;																/* return operation status */
;;;192    }
000026  bdfe              POP      {r1-r7,pc}
                  |L2.40|
000028  9800              LDR      r0,[sp,#0]            ;177
00002a  2860              CMP      r0,#0x60              ;177
00002c  dd01              BLE      |L2.50|
00002e  2000              MOVS     r0,#0                 ;178
000030  e7f9              B        |L2.38|
                  |L2.50|
000032  2400              MOVS     r4,#0                 ;180
000034  e012              B        |L2.92|
                  |L2.54|
000036  200c              MOVS     r0,#0xc               ;181
000038  4360              MULS     r0,r4,r0              ;181
00003a  4911              LDR      r1,|L2.128|
00003c  5a09              LDRH     r1,[r1,r0]            ;181
00003e  9800              LDR      r0,[sp,#0]            ;181
000040  4281              CMP      r1,r0                 ;181
000042  d10a              BNE      |L2.90|
000044  200c              MOVS     r0,#0xc               ;181
000046  4360              MULS     r0,r4,r0              ;181
000048  490d              LDR      r1,|L2.128|
00004a  1840              ADDS     r0,r0,r1              ;181
00004c  8840              LDRH     r0,[r0,#2]            ;181
00004e  42b0              CMP      r0,r6                 ;181
000050  d103              BNE      |L2.90|
000052  490c              LDR      r1,|L2.132|
000054  800c              STRH     r4,[r1,#0]            ;182
000056  2701              MOVS     r7,#1                 ;183
000058  e002              B        |L2.96|
                  |L2.90|
00005a  1c64              ADDS     r4,r4,#1              ;180
                  |L2.92|
00005c  2c47              CMP      r4,#0x47              ;180
00005e  d3ea              BCC      |L2.54|
                  |L2.96|
000060  bf00              NOP                            ;184
000062  2f01              CMP      r7,#1                 ;187
000064  d107              BNE      |L2.118|
000066  4907              LDR      r1,|L2.132|
000068  8809              LDRH     r1,[r1,#0]            ;188  ; config_tab_idx
00006a  220c              MOVS     r2,#0xc               ;188
00006c  4351              MULS     r1,r2,r1              ;188
00006e  4a04              LDR      r2,|L2.128|
000070  1888              ADDS     r0,r1,r2              ;188
000072  f7fffffe          BL       pll_config
                  |L2.118|
000076  4638              MOV      r0,r7                 ;191
000078  e7d5              B        |L2.38|
;;;193    
                          ENDP

00007a  0000              DCW      0x0000
                  |L2.124|
                          DCD      0x000f4240
                  |L2.128|
                          DCD      config_tab
                  |L2.132|
                          DCD      config_tab_idx

                          AREA ||i.Chip_IRC_SetFreq_ROM||, CODE, READONLY, ALIGN=2

                  Chip_IRC_SetFreq_ROM PROC
;;;193    
;;;194    void Chip_IRC_SetFreq_ROM(uint32_t sys)
000000  b530              PUSH     {r4,r5,lr}
;;;195    {
000002  b087              SUB      sp,sp,#0x1c
000004  4604              MOV      r4,r0
;;;196    	uint32_t cmd[4], resp[2];
;;;197    
;;;198    	Chip_SYSCTL_PowerUp(SYSCTL_SLPWAKE_IRC_PD);									/* Turn on the IRC by clearing the power down bit */
000006  2002              MOVS     r0,#2
000008  f7fffffe          BL       Chip_SYSCTL_PowerUp
;;;199    	Chip_Clock_SetSystemPLLSource(SYSCTL_PLLCLKSRC_IRC);						/* Select PLL input to be IRC */
00000c  2000              MOVS     r0,#0
00000e  f7fffffe          BL       Chip_Clock_SetSystemPLLSource
;;;200    	Chip_FMC_SetFLASHAccess(FLASHTIM_30MHZ_CPU);								/* Setup FLASH access to 2 clocks (up to 30MHz) */
000012  2001              MOVS     r0,#1
000014  f7fffffe          BL       Chip_FMC_SetFLASHAccess
;;;201    
;;;202    	cmd[0] = Chip_Clock_GetIntOscRate() / 1000;									/* in KHz */
000018  bf00              NOP      
00001a  4810              LDR      r0,|L3.92|
00001c  4605              MOV      r5,r0
00001e  217d              MOVS     r1,#0x7d
000020  00c9              LSLS     r1,r1,#3
000022  f7fffffe          BL       __aeabi_uidivmod
000026  9003              STR      r0,[sp,#0xc]
;;;203    	cmd[1] = sys / 1000;														/* system clock rate in kHz */
000028  217d              MOVS     r1,#0x7d
00002a  00c9              LSLS     r1,r1,#3
00002c  4620              MOV      r0,r4
00002e  f7fffffe          BL       __aeabi_uidivmod
000032  9004              STR      r0,[sp,#0x10]
;;;204    	cmd[2] = CPU_FREQ_EQU;
000034  2000              MOVS     r0,#0
000036  9005              STR      r0,[sp,#0x14]
;;;205    	cmd[3] = sys / 10000;														/* Timeout. See UM10601, section 23.4.1.3 for details */
000038  4909              LDR      r1,|L3.96|
00003a  4620              MOV      r0,r4
00003c  f7fffffe          BL       __aeabi_uidivmod
000040  9006              STR      r0,[sp,#0x18]
;;;206    	LPC_PWRD_API->set_pll(cmd, resp);											/* Attempt to set the PLL */
000042  4808              LDR      r0,|L3.100|
000044  6b80              LDR      r0,[r0,#0x38]
000046  68c0              LDR      r0,[r0,#0xc]
000048  a901              ADD      r1,sp,#4
00004a  6802              LDR      r2,[r0,#0]
00004c  a803              ADD      r0,sp,#0xc
00004e  4790              BLX      r2
;;;207    
;;;208    	while (resp[0] != PLL_CMD_SUCCESS) {}										/* Dead loop on fail */
000050  bf00              NOP      
                  |L3.82|
000052  9801              LDR      r0,[sp,#4]
000054  2800              CMP      r0,#0
000056  d1fc              BNE      |L3.82|
;;;209    }
000058  b007              ADD      sp,sp,#0x1c
00005a  bd30              POP      {r4,r5,pc}
                          ENDP

                  |L3.92|
                          DCD      0x00b71b00
                  |L3.96|
                          DCD      0x00002710
                  |L3.100|
                          DCD      0x1fff1fc0

                          AREA ||i.pll_config||, CODE, READONLY, ALIGN=2

                  pll_config PROC
;;;141    
;;;142    static void pll_config(const LPC_8XX_PLL_T* pll_cfg)
000000  b510              PUSH     {r4,lr}
;;;143    {
000002  4604              MOV      r4,r0
;;;144    	Chip_SYSCTL_PowerUp(SYSCTL_SLPWAKE_IRC_PD);									/* turn on the IRC by clearing the power down bit */
000004  2002              MOVS     r0,#2
000006  f7fffffe          BL       Chip_SYSCTL_PowerUp
;;;145    	Chip_Clock_SetSystemPLLSource(SYSCTL_PLLCLKSRC_IRC);						/* select PLL input to be IRC */
00000a  2000              MOVS     r0,#0
00000c  f7fffffe          BL       Chip_Clock_SetSystemPLLSource
;;;146    	Chip_Clock_SetMainClockSource(SYSCTL_MAINCLKSRC_IRC);
000010  2000              MOVS     r0,#0
000012  f7fffffe          BL       Chip_Clock_SetMainClockSource
;;;147    	Chip_FMC_SetFLASHAccess(FLASHTIM_30MHZ_CPU);								/* setup FLASH access to 2 clocks (up to 30MHz) */
000016  2001              MOVS     r0,#1
000018  f7fffffe          BL       Chip_FMC_SetFLASHAccess
;;;148    	Chip_SYSCTL_PowerDown(SYSCTL_SLPWAKE_SYSPLL_PD);							/* power down PLL to change the PLL divider ratio */
00001c  2080              MOVS     r0,#0x80
00001e  f7fffffe          BL       Chip_SYSCTL_PowerDown
;;;149    	Chip_Clock_SetupSystemPLL(pll_cfg->msel, pll_cfg->psel);					/* configure the PLL */
000022  79a0              LDRB     r0,[r4,#6]
000024  7a21              LDRB     r1,[r4,#8]
000026  06c2              LSLS     r2,r0,#27
000028  0ed2              LSRS     r2,r2,#27
00002a  078b              LSLS     r3,r1,#30
00002c  0e5b              LSRS     r3,r3,#25
00002e  431a              ORRS     r2,r2,r3
000030  4b0b              LDR      r3,|L4.96|
000032  609a              STR      r2,[r3,#8]
000034  bf00              NOP      
;;;150    	Chip_SYSCTL_PowerUp(SYSCTL_SLPWAKE_SYSPLL_PD);								/* turn on the PLL by clearing the power down bit */
000036  2080              MOVS     r0,#0x80
000038  f7fffffe          BL       Chip_SYSCTL_PowerUp
;;;151    	while (!Chip_Clock_IsSystemPLLLocked()) {}									/* wait for PLL to lock */
00003c  bf00              NOP      
                  |L4.62|
00003e  bf00              NOP      
000040  4807              LDR      r0,|L4.96|
000042  68c0              LDR      r0,[r0,#0xc]
000044  07c0              LSLS     r0,r0,#31
000046  0fc0              LSRS     r0,r0,#31
000048  2800              CMP      r0,#0
00004a  d0f8              BEQ      |L4.62|
;;;152    	Chip_Clock_SetSysClockDiv(pll_cfg->divider);								/* load the divider */
00004c  8960              LDRH     r0,[r4,#0xa]
00004e  4904              LDR      r1,|L4.96|
000050  3140              ADDS     r1,r1,#0x40
000052  6388              STR      r0,[r1,#0x38]
000054  bf00              NOP      
;;;153    	Chip_Clock_SetMainClockSource(SYSCTL_MAINCLKSRC_PLLOUT);					/* enable the new Frequency */
000056  2003              MOVS     r0,#3
000058  f7fffffe          BL       Chip_Clock_SetMainClockSource
;;;154    }
00005c  bd10              POP      {r4,pc}
;;;155    
                          ENDP

00005e  0000              DCW      0x0000
                  |L4.96|
                          DCD      0x40048000

                          AREA ||.constdata||, DATA, READONLY, ALIGN=1

                  config_tab
000000  000c000c          DCW      0x000c,0x000c
000004  00c00000          DCW      0x00c0,0x0000
000008  00030001          DCW      0x0003,0x0001
00000c  000c0006          DCW      0x000c,0x0006
000010  00c00000          DCW      0x00c0,0x0000
000014  00030002          DCW      0x0003,0x0002
000018  000c0004          DCW      0x000c,0x0004
00001c  00c00000          DCW      0x00c0,0x0000
000020  00030003          DCW      0x0003,0x0003
000024  000c0003          DCW      0x000c,0x0003
000028  00c00000          DCW      0x00c0,0x0000
00002c  00030004          DCW      0x0003,0x0004
000030  000c0002          DCW      0x000c,0x0002
000034  00c00000          DCW      0x00c0,0x0000
000038  00030006          DCW      0x0003,0x0006
00003c  000c0001          DCW      0x000c,0x0001
000040  00c00000          DCW      0x00c0,0x0000
000044  0003000c          DCW      0x0003,0x000c
000048  00180018          DCW      0x0018,0x0018
00004c  00c00001          DCW      0x00c0,0x0001
000050  00020001          DCW      0x0002,0x0001
000054  0018000c          DCW      0x0018,0x000c
000058  00c00001          DCW      0x00c0,0x0001
00005c  00020002          DCW      0x0002,0x0002
000060  00180008          DCW      0x0018,0x0008
000064  00c00001          DCW      0x00c0,0x0001
000068  00020003          DCW      0x0002,0x0003
00006c  00180006          DCW      0x0018,0x0006
000070  00c00001          DCW      0x00c0,0x0001
000074  00020004          DCW      0x0002,0x0004
000078  00180004          DCW      0x0018,0x0004
00007c  00c00001          DCW      0x00c0,0x0001
000080  00020006          DCW      0x0002,0x0006
000084  00180003          DCW      0x0018,0x0003
000088  00c00001          DCW      0x00c0,0x0001
00008c  00020008          DCW      0x0002,0x0008
000090  00180002          DCW      0x0018,0x0002
000094  00c00001          DCW      0x00c0,0x0001
000098  0002000c          DCW      0x0002,0x000c
00009c  00180001          DCW      0x0018,0x0001
0000a0  00c00001          DCW      0x00c0,0x0001
0000a4  00020018          DCW      0x0002,0x0018
0000a8  00240012          DCW      0x0024,0x0012
0000ac  01200002          DCW      0x0120,0x0002
0000b0  00020002          DCW      0x0002,0x0002
0000b4  0024000c          DCW      0x0024,0x000c
0000b8  01200002          DCW      0x0120,0x0002
0000bc  00020003          DCW      0x0002,0x0003
0000c0  00240009          DCW      0x0024,0x0009
0000c4  01200002          DCW      0x0120,0x0002
0000c8  00020004          DCW      0x0002,0x0004
0000cc  00240006          DCW      0x0024,0x0006
0000d0  01200002          DCW      0x0120,0x0002
0000d4  00020006          DCW      0x0002,0x0006
0000d8  00240004          DCW      0x0024,0x0004
0000dc  01200002          DCW      0x0120,0x0002
0000e0  00020009          DCW      0x0002,0x0009
0000e4  00240003          DCW      0x0024,0x0003
0000e8  01200002          DCW      0x0120,0x0002
0000ec  0002000c          DCW      0x0002,0x000c
0000f0  00240002          DCW      0x0024,0x0002
0000f4  01200002          DCW      0x0120,0x0002
0000f8  00020012          DCW      0x0002,0x0012
0000fc  00240001          DCW      0x0024,0x0001
000100  01200002          DCW      0x0120,0x0002
000104  00020024          DCW      0x0002,0x0024
000108  00300018          DCW      0x0030,0x0018
00010c  00c00003          DCW      0x00c0,0x0003
000110  00010002          DCW      0x0001,0x0002
000114  00300010          DCW      0x0030,0x0010
000118  00c00003          DCW      0x00c0,0x0003
00011c  00010003          DCW      0x0001,0x0003
000120  0030000c          DCW      0x0030,0x000c
000124  00c00003          DCW      0x00c0,0x0003
000128  00010004          DCW      0x0001,0x0004
00012c  00300008          DCW      0x0030,0x0008
000130  00c00003          DCW      0x00c0,0x0003
000134  00010006          DCW      0x0001,0x0006
000138  00300006          DCW      0x0030,0x0006
00013c  00c00003          DCW      0x00c0,0x0003
000140  00010008          DCW      0x0001,0x0008
000144  00300004          DCW      0x0030,0x0004
000148  00c00003          DCW      0x00c0,0x0003
00014c  0001000c          DCW      0x0001,0x000c
000150  00300003          DCW      0x0030,0x0003
000154  00c00003          DCW      0x00c0,0x0003
000158  00010010          DCW      0x0001,0x0010
00015c  00300002          DCW      0x0030,0x0002
000160  00c00003          DCW      0x00c0,0x0003
000164  00010018          DCW      0x0001,0x0018
000168  00300001          DCW      0x0030,0x0001
00016c  00c00003          DCW      0x00c0,0x0003
000170  00010030          DCW      0x0001,0x0030
000174  003c001e          DCW      0x003c,0x001e
000178  00f00004          DCW      0x00f0,0x0004
00017c  00010002          DCW      0x0001,0x0002
000180  003c0014          DCW      0x003c,0x0014
000184  00f00004          DCW      0x00f0,0x0004
000188  00010003          DCW      0x0001,0x0003
00018c  003c000f          DCW      0x003c,0x000f
000190  00f00004          DCW      0x00f0,0x0004
000194  00010004          DCW      0x0001,0x0004
000198  003c000c          DCW      0x003c,0x000c
00019c  00f00004          DCW      0x00f0,0x0004
0001a0  00010005          DCW      0x0001,0x0005
0001a4  003c000a          DCW      0x003c,0x000a
0001a8  00f00004          DCW      0x00f0,0x0004
0001ac  00010006          DCW      0x0001,0x0006
0001b0  003c0006          DCW      0x003c,0x0006
0001b4  00f00004          DCW      0x00f0,0x0004
0001b8  0001000a          DCW      0x0001,0x000a
0001bc  003c0005          DCW      0x003c,0x0005
0001c0  00f00004          DCW      0x00f0,0x0004
0001c4  0001000c          DCW      0x0001,0x000c
0001c8  003c0004          DCW      0x003c,0x0004
0001cc  00f00004          DCW      0x00f0,0x0004
0001d0  0001000f          DCW      0x0001,0x000f
0001d4  003c0003          DCW      0x003c,0x0003
0001d8  00f00004          DCW      0x00f0,0x0004
0001dc  00010014          DCW      0x0001,0x0014
0001e0  003c0002          DCW      0x003c,0x0002
0001e4  00f00004          DCW      0x00f0,0x0004
0001e8  0001001e          DCW      0x0001,0x001e
0001ec  003c0001          DCW      0x003c,0x0001
0001f0  00f00004          DCW      0x00f0,0x0004
0001f4  0001003c          DCW      0x0001,0x003c
0001f8  00480018          DCW      0x0048,0x0018
0001fc  01200005          DCW      0x0120,0x0005
000200  00010003          DCW      0x0001,0x0003
000204  00480012          DCW      0x0048,0x0012
000208  01200005          DCW      0x0120,0x0005
00020c  00010004          DCW      0x0001,0x0004
000210  0048000c          DCW      0x0048,0x000c
000214  01200005          DCW      0x0120,0x0005
000218  00010006          DCW      0x0001,0x0006
00021c  00480009          DCW      0x0048,0x0009
000220  01200005          DCW      0x0120,0x0005
000224  00010008          DCW      0x0001,0x0008
000228  00480008          DCW      0x0048,0x0008
00022c  01200005          DCW      0x0120,0x0005
000230  00010009          DCW      0x0001,0x0009
000234  00480006          DCW      0x0048,0x0006
000238  01200005          DCW      0x0120,0x0005
00023c  0001000c          DCW      0x0001,0x000c
000240  00480004          DCW      0x0048,0x0004
000244  01200005          DCW      0x0120,0x0005
000248  00010012          DCW      0x0001,0x0012
00024c  00480003          DCW      0x0048,0x0003
000250  01200005          DCW      0x0120,0x0005
000254  00010018          DCW      0x0001,0x0018
000258  00480002          DCW      0x0048,0x0002
00025c  01200005          DCW      0x0120,0x0005
000260  00010024          DCW      0x0001,0x0024
000264  00480001          DCW      0x0048,0x0001
000268  01200005          DCW      0x0120,0x0005
00026c  00010048          DCW      0x0001,0x0048
000270  0054001c          DCW      0x0054,0x001c
000274  00a80006          DCW      0x00a8,0x0006
000278  00000003          DCW      0x0000,0x0003
00027c  00540015          DCW      0x0054,0x0015
000280  00a80006          DCW      0x00a8,0x0006
000284  00000004          DCW      0x0000,0x0004
000288  0054000e          DCW      0x0054,0x000e
00028c  00a80006          DCW      0x00a8,0x0006
000290  00000006          DCW      0x0000,0x0006
000294  0054000c          DCW      0x0054,0x000c
000298  00a80006          DCW      0x00a8,0x0006
00029c  00000007          DCW      0x0000,0x0007
0002a0  00540007          DCW      0x0054,0x0007
0002a4  00a80006          DCW      0x00a8,0x0006
0002a8  0000000c          DCW      0x0000,0x000c
0002ac  00540006          DCW      0x0054,0x0006
0002b0  00a80006          DCW      0x00a8,0x0006
0002b4  0000000e          DCW      0x0000,0x000e
0002b8  00540004          DCW      0x0054,0x0004
0002bc  00a80006          DCW      0x00a8,0x0006
0002c0  00000015          DCW      0x0000,0x0015
0002c4  00540003          DCW      0x0054,0x0003
0002c8  00a80006          DCW      0x00a8,0x0006
0002cc  0000001c          DCW      0x0000,0x001c
0002d0  00540002          DCW      0x0054,0x0002
0002d4  00a80006          DCW      0x00a8,0x0006
0002d8  0000002a          DCW      0x0000,0x002a
0002dc  00540001          DCW      0x0054,0x0001
0002e0  00a80006          DCW      0x00a8,0x0006
0002e4  00000054          DCW      0x0000,0x0054
0002e8  00600018          DCW      0x0060,0x0018
0002ec  00c00007          DCW      0x00c0,0x0007
0002f0  00000004          DCW      0x0000,0x0004
0002f4  00600010          DCW      0x0060,0x0010
0002f8  00c00007          DCW      0x00c0,0x0007
0002fc  00000006          DCW      0x0000,0x0006
000300  0060000c          DCW      0x0060,0x000c
000304  00c00007          DCW      0x00c0,0x0007
000308  00000008          DCW      0x0000,0x0008
00030c  00600008          DCW      0x0060,0x0008
000310  00c00007          DCW      0x00c0,0x0007
000314  0000000c          DCW      0x0000,0x000c
000318  00600006          DCW      0x0060,0x0006
00031c  00c00007          DCW      0x00c0,0x0007
000320  00000010          DCW      0x0000,0x0010
000324  00600004          DCW      0x0060,0x0004
000328  00c00007          DCW      0x00c0,0x0007
00032c  00000018          DCW      0x0000,0x0018
000330  00600003          DCW      0x0060,0x0003
000334  00c00007          DCW      0x00c0,0x0007
000338  00000020          DCW      0x0000,0x0020
00033c  00600002          DCW      0x0060,0x0002
000340  00c00007          DCW      0x00c0,0x0007
000344  00000030          DCW      0x0000,0x0030
000348  00600001          DCW      0x0060,0x0001
00034c  00c00007          DCW      0x00c0,0x0007
000350  00000060          DCW      0x0000,0x0060

                          AREA ||.data||, DATA, ALIGN=1

                  config_tab_idx
000000  0000              DCW      0x0000

;*** Start embedded assembler ***

#line 1 "lpc_chip_82x\\src\\irc_8xx.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___9_irc_8xx_c_5b03a845____REV16|
#line 465 ".\\_CMSIS\\v5.20\\Include\\cmsis_armcc.h"
|__asm___9_irc_8xx_c_5b03a845____REV16| PROC
#line 466

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___9_irc_8xx_c_5b03a845____REVSH|
#line 480
|__asm___9_irc_8xx_c_5b03a845____REVSH| PROC
#line 481

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
