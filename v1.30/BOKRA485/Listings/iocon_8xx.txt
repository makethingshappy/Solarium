; generated by Component: ARM Compiler 5.06 update 3 (build 300) Tool: ArmCC [4d35f0]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\objects\iocon_8xx.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\iocon_8xx.d --cpu=Cortex-M0+ --apcs=interwork -O0 --diag_suppress=9931 -I..\BOKRA485 -I.\_CMSIS\v5.20\Include -I.\lpc_chip_82x\inc -I.\Hardware -IC:\Users\Peter\Documents\Projects\Workspace-Keil\LPC824\BOKRA485\v1.30\BOKRA485\RTE -IC:\Keil_v5\ARM\PACK\Keil\LPC800_DFP\1.10.1\Device\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=521 -DLPC824M201JHI33 -DCORE_M0PLUS --omf_browse=.\objects\iocon_8xx.crf lpc_chip_82x\src\iocon_8xx.c]
                          THUMB

                          AREA ||i.Chip_IOCON_PinSetClockDivisor||, CODE, READONLY, ALIGN=1

                  Chip_IOCON_PinSetClockDivisor PROC
;;;101    /* Set the peripheral clock divisor for a pin. */
;;;102    void Chip_IOCON_PinSetClockDivisor(LPC_IOCON_T *pIOCON, CHIP_PINx_T pin, CHIP_PIN_CLKDIV_T clkdiv)
000000  b530              PUSH     {r4,r5,lr}
;;;103    {
;;;104    	uint32_t reg;
;;;105    
;;;106    	reg = pIOCON->PIO0[pin] & ~(PIN_CLKDIV_MASK);
000002  008c              LSLS     r4,r1,#2
000004  5904              LDR      r4,[r0,r4]
000006  2507              MOVS     r5,#7
000008  036d              LSLS     r5,r5,#13
00000a  43ac              BICS     r4,r4,r5
00000c  4623              MOV      r3,r4
;;;107    	pIOCON->PIO0[pin] = reg | (clkdiv << PIN_CLKDIV_BITNUM);
00000e  0354              LSLS     r4,r2,#13
000010  431c              ORRS     r4,r4,r3
000012  008d              LSLS     r5,r1,#2
000014  5144              STR      r4,[r0,r5]
;;;108    }
000016  bd30              POP      {r4,r5,pc}
;;;109    
                          ENDP


                          AREA ||i.Chip_IOCON_PinSetHysteresis||, CODE, READONLY, ALIGN=1

                  Chip_IOCON_PinSetHysteresis PROC
;;;59     /* Enables/disables the pin hysteresis. */
;;;60     void Chip_IOCON_PinSetHysteresis(LPC_IOCON_T *pIOCON, CHIP_PINx_T pin, bool enable)
000000  b510              PUSH     {r4,lr}
;;;61     {
;;;62     	if (enable == true) {
000002  2a01              CMP      r2,#1
000004  d108              BNE      |L2.24|
;;;63     		Chip_IOCON_PinEnableHysteresis(pIOCON, pin);
000006  bf00              NOP      
000008  008b              LSLS     r3,r1,#2
00000a  58c3              LDR      r3,[r0,r3]
00000c  2420              MOVS     r4,#0x20
00000e  4323              ORRS     r3,r3,r4
000010  008c              LSLS     r4,r1,#2
000012  5103              STR      r3,[r0,r4]
000014  bf00              NOP      
000016  e008              B        |L2.42|
                  |L2.24|
;;;64     	}
;;;65     	else {
;;;66     		Chip_IOCON_PinDisableHysteresis(pIOCON, pin);
000018  bf00              NOP      
00001a  008b              LSLS     r3,r1,#2
00001c  58c3              LDR      r3,[r0,r3]
00001e  2420              MOVS     r4,#0x20
000020  43a3              BICS     r3,r3,r4
000022  008c              LSLS     r4,r1,#2
000024  5103              STR      r3,[r0,r4]
000026  bf00              NOP      
000028  bf00              NOP      
                  |L2.42|
;;;67     	}
;;;68     }
00002a  bd10              POP      {r4,pc}
;;;69     
                          ENDP


                          AREA ||i.Chip_IOCON_PinSetI2CMode||, CODE, READONLY, ALIGN=1

                  Chip_IOCON_PinSetI2CMode PROC
;;;110    /* Set the I2C mode for a pin. */
;;;111    void Chip_IOCON_PinSetI2CMode(LPC_IOCON_T *pIOCON, CHIP_PINx_T pin, CHIP_PIN_I2CMODE_T mode)
000000  b530              PUSH     {r4,r5,lr}
;;;112    {
;;;113    	uint32_t reg;
;;;114    
;;;115    	/* I2C mode bits only for I2C pins */
;;;116    	reg = pIOCON->PIO0[pin] & ~(PIN_I2CMODE_MASK);
000002  008c              LSLS     r4,r1,#2
000004  5904              LDR      r4,[r0,r4]
000006  2503              MOVS     r5,#3
000008  022d              LSLS     r5,r5,#8
00000a  43ac              BICS     r4,r4,r5
00000c  4623              MOV      r3,r4
;;;117    	pIOCON->PIO0[pin] = reg | (mode << PIN_I2CMODE_BITNUM);
00000e  0214              LSLS     r4,r2,#8
000010  431c              ORRS     r4,r4,r3
000012  008d              LSLS     r5,r1,#2
000014  5144              STR      r4,[r0,r5]
;;;118    }
000016  bd30              POP      {r4,r5,pc}
;;;119    
                          ENDP


                          AREA ||i.Chip_IOCON_PinSetInputInverted||, CODE, READONLY, ALIGN=1

                  Chip_IOCON_PinSetInputInverted PROC
;;;70     /*Inverts (or not) the input seen by a pin. */
;;;71     void Chip_IOCON_PinSetInputInverted(LPC_IOCON_T *pIOCON, CHIP_PINx_T pin, bool invert)
000000  b510              PUSH     {r4,lr}
;;;72     {
;;;73     	if (invert == true) {
000002  2a01              CMP      r2,#1
000004  d108              BNE      |L4.24|
;;;74     		Chip_IOCON_PinEnableInputInverted(pIOCON, pin);
000006  bf00              NOP      
000008  008b              LSLS     r3,r1,#2
00000a  58c3              LDR      r3,[r0,r3]
00000c  2440              MOVS     r4,#0x40
00000e  4323              ORRS     r3,r3,r4
000010  008c              LSLS     r4,r1,#2
000012  5103              STR      r3,[r0,r4]
000014  bf00              NOP      
000016  e008              B        |L4.42|
                  |L4.24|
;;;75     	}
;;;76     	else {
;;;77     		Chip_IOCON_PinDisableInputInverted(pIOCON, pin);
000018  bf00              NOP      
00001a  008b              LSLS     r3,r1,#2
00001c  58c3              LDR      r3,[r0,r3]
00001e  2440              MOVS     r4,#0x40
000020  43a3              BICS     r3,r3,r4
000022  008c              LSLS     r4,r1,#2
000024  5103              STR      r3,[r0,r4]
000026  bf00              NOP      
000028  bf00              NOP      
                  |L4.42|
;;;78     	}
;;;79     }
00002a  bd10              POP      {r4,pc}
;;;80     
                          ENDP


                          AREA ||i.Chip_IOCON_PinSetMode||, CODE, READONLY, ALIGN=1

                  Chip_IOCON_PinSetMode PROC
;;;50     /* Set the pin mode (pull-up/pull-down). */
;;;51     void Chip_IOCON_PinSetMode(LPC_IOCON_T *pIOCON, CHIP_PINx_T pin, CHIP_PIN_MODE_T mode)
000000  b530              PUSH     {r4,r5,lr}
;;;52     {
;;;53     	uint32_t reg;
;;;54     
;;;55     	reg = pIOCON->PIO0[pin] & ~(PIN_MODE_MASK);
000002  008c              LSLS     r4,r1,#2
000004  5904              LDR      r4,[r0,r4]
000006  2518              MOVS     r5,#0x18
000008  43ac              BICS     r4,r4,r5
00000a  4623              MOV      r3,r4
;;;56     	pIOCON->PIO0[pin] = reg | (mode << PIN_MODE_BITNUM);
00000c  00d4              LSLS     r4,r2,#3
00000e  431c              ORRS     r4,r4,r3
000010  008d              LSLS     r5,r1,#2
000012  5144              STR      r4,[r0,r5]
;;;57     }
000014  bd30              POP      {r4,r5,pc}
;;;58     
                          ENDP


                          AREA ||i.Chip_IOCON_PinSetOpenDrainMode||, CODE, READONLY, ALIGN=1

                  Chip_IOCON_PinSetOpenDrainMode PROC
;;;81     /* Enables/disables Open-Drain mode for a pin. */
;;;82     void Chip_IOCON_PinSetOpenDrainMode(LPC_IOCON_T *pIOCON, CHIP_PINx_T pin, bool open_drain)
000000  b510              PUSH     {r4,lr}
;;;83     {
;;;84     	if (open_drain == true) {
000002  2a01              CMP      r2,#1
000004  d108              BNE      |L6.24|
;;;85     		Chip_IOCON_PinEnableOpenDrainMode(pIOCON, pin);
000006  bf00              NOP      
000008  008b              LSLS     r3,r1,#2
00000a  58c3              LDR      r3,[r0,r3]
00000c  0294              LSLS     r4,r2,#10
00000e  4323              ORRS     r3,r3,r4
000010  008c              LSLS     r4,r1,#2
000012  5103              STR      r3,[r0,r4]
000014  bf00              NOP      
000016  e009              B        |L6.44|
                  |L6.24|
;;;86     	}
;;;87     	else {
;;;88     		Chip_IOCON_PinDisableOpenDrainMode(pIOCON, pin);
000018  bf00              NOP      
00001a  008b              LSLS     r3,r1,#2
00001c  58c3              LDR      r3,[r0,r3]
00001e  2401              MOVS     r4,#1
000020  02a4              LSLS     r4,r4,#10
000022  43a3              BICS     r3,r3,r4
000024  008c              LSLS     r4,r1,#2
000026  5103              STR      r3,[r0,r4]
000028  bf00              NOP      
00002a  bf00              NOP      
                  |L6.44|
;;;89     	}
;;;90     }
00002c  bd10              POP      {r4,pc}
;;;91     
                          ENDP


                          AREA ||i.Chip_IOCON_PinSetSampleMode||, CODE, READONLY, ALIGN=1

                  Chip_IOCON_PinSetSampleMode PROC
;;;92     /* Enable/configure digital filter sample mode for a pin. */
;;;93     void Chip_IOCON_PinSetSampleMode(LPC_IOCON_T *pIOCON, CHIP_PINx_T pin, CHIP_PIN_SMODE_T smode)
000000  b530              PUSH     {r4,r5,lr}
;;;94     {
;;;95     	uint32_t reg;
;;;96     
;;;97     	reg = pIOCON->PIO0[pin] & ~(PIN_SMODE_MASK);
000002  008c              LSLS     r4,r1,#2
000004  5904              LDR      r4,[r0,r4]
000006  2503              MOVS     r5,#3
000008  02ed              LSLS     r5,r5,#11
00000a  43ac              BICS     r4,r4,r5
00000c  4623              MOV      r3,r4
;;;98     	pIOCON->PIO0[pin] = reg | (smode << PIN_SMODE_BITNUM);
00000e  02d4              LSLS     r4,r2,#11
000010  431c              ORRS     r4,r4,r3
000012  008d              LSLS     r5,r1,#2
000014  5144              STR      r4,[r0,r5]
;;;99     }
000016  bd30              POP      {r4,r5,pc}
;;;100    
                          ENDP


                          AREA ||i.Chip_IOCON_SetPinMuxing||, CODE, READONLY, ALIGN=1

                  Chip_IOCON_SetPinMuxing PROC
;;;120    /* Set all I/O Control pin muxing */
;;;121    void Chip_IOCON_SetPinMuxing(LPC_IOCON_T *pIOCON, const PINMUX_GRP_T* pinArray, uint32_t arrayLength)
000000  b570              PUSH     {r4-r6,lr}
;;;122    {
000002  460b              MOV      r3,r1
;;;123    	uint32_t ix;
;;;124    
;;;125    	for (ix = 0; ix < arrayLength; ix++ ) {
000004  2400              MOVS     r4,#0
000006  4621              MOV      r1,r4
000008  e009              B        |L8.30|
                  |L8.10|
;;;126    		Chip_IOCON_PinMuxSet(pIOCON, pinArray[ix].pin, pinArray[ix].modefunc);
00000a  008e              LSLS     r6,r1,#2
00000c  5d9c              LDRB     r4,[r3,r6]
00000e  008e              LSLS     r6,r1,#2
000010  599e              LDR      r6,[r3,r6]
000012  0a35              LSRS     r5,r6,#8
000014  00a6              LSLS     r6,r4,#2
000016  5185              STR      r5,[r0,r6]
000018  bf00              NOP      
00001a  1c4c              ADDS     r4,r1,#1              ;125
00001c  4621              MOV      r1,r4                 ;125
                  |L8.30|
00001e  4291              CMP      r1,r2                 ;125
000020  d3f3              BCC      |L8.10|
;;;127    	}
;;;128    }
000022  bd70              POP      {r4-r6,pc}
                          ENDP


;*** Start embedded assembler ***

#line 1 "lpc_chip_82x\\src\\iocon_8xx.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___11_iocon_8xx_c_a80ef4c4____REV16|
#line 465 ".\\_CMSIS\\v5.20\\Include\\cmsis_armcc.h"
|__asm___11_iocon_8xx_c_a80ef4c4____REV16| PROC
#line 466

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___11_iocon_8xx_c_a80ef4c4____REVSH|
#line 480
|__asm___11_iocon_8xx_c_a80ef4c4____REVSH| PROC
#line 481

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
