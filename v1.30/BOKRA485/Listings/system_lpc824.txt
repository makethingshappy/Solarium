; generated by Component: ARM Compiler 5.06 update 3 (build 300) Tool: ArmCC [4d35f0]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\objects\system_lpc824.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\system_lpc824.d --cpu=Cortex-M0+ --apcs=interwork -O0 --diag_suppress=9931 -I..\BOKRA485 -I.\_CMSIS\v5.20\Include -I.\lpc_chip_82x\inc -I.\Hardware -IC:\Users\Peter\Documents\Projects\Workspace-Keil\LPC824\BOKRA485\v1.30\BOKRA485\RTE -IC:\Keil_v5\ARM\PACK\Keil\LPC800_DFP\1.10.1\Device\Include -IC:\Keil_v5\ARM\CMSIS\Include -D__UVISION_VERSION=521 -DLPC824M201JHI33 -DCORE_M0PLUS --omf_browse=.\objects\system_lpc824.crf lpc_chip_82x\system_LPC824.c]
                          THUMB

                          AREA ||i.CLOCK_GetSystemPLLInClkRate||, CODE, READONLY, ALIGN=2

                  CLOCK_GetSystemPLLInClkRate PROC
;;;80     /* get system pll input freq */
;;;81     static uint32_t CLOCK_GetSystemPLLInClkRate(void)
000000  2000              MOVS     r0,#0
;;;82     {
;;;83         uint32_t freq = 0U;
;;;84     
;;;85         switch ((SYSCON->SYSPLLCLKSEL & SYSCON_SYSPLLCLKSEL_SEL_MASK))
000002  490a              LDR      r1,|L1.44|
000004  6809              LDR      r1,[r1,#0]
000006  0789              LSLS     r1,r1,#30
000008  0f89              LSRS     r1,r1,#30
00000a  2900              CMP      r1,#0
00000c  d004              BEQ      |L1.24|
00000e  2901              CMP      r1,#1
000010  d004              BEQ      |L1.28|
000012  2903              CMP      r1,#3
000014  d106              BNE      |L1.36|
000016  e003              B        |L1.32|
                  |L1.24|
;;;86         {
;;;87             /* source from external clock in */
;;;88             case 0x00U:
;;;89                 freq = CLK_IRC_12MHZ;
000018  4805              LDR      r0,|L1.48|
;;;90                 break;
00001a  e004              B        |L1.38|
                  |L1.28|
;;;91             /* source from the IRC clock */
;;;92             case 0x01U:
;;;93                 freq = CLK_OSC_IN;
00001c  4804              LDR      r0,|L1.48|
;;;94                 break;
00001e  e002              B        |L1.38|
                  |L1.32|
;;;95             /* source from external clock clock */
;;;96             case 0x03U:
;;;97                 freq = EXT_CLK_IN;
000020  2000              MOVS     r0,#0
;;;98                 break;
000022  e000              B        |L1.38|
                  |L1.36|
;;;99     
;;;100            default:
;;;101                break;
000024  bf00              NOP      
                  |L1.38|
000026  bf00              NOP                            ;90
;;;102        }
;;;103    
;;;104        return freq;
;;;105    }
000028  4770              BX       lr
;;;106    
                          ENDP

00002a  0000              DCW      0x0000
                  |L1.44|
                          DCD      0x40048040
                  |L1.48|
                          DCD      0x00b71b00

                          AREA ||i.Clock_GetPLLFreq||, CODE, READONLY, ALIGN=1

                  Clock_GetPLLFreq PROC
;;;107    /* get system pll output freq*/
;;;108    static uint32_t Clock_GetPLLFreq(uint32_t PLLReg, uint32_t inputRate)
000000  4602              MOV      r2,r0
;;;109    {
;;;110        uint32_t m_val = ((PLLReg & 0x1F) + 1);
000002  06d0              LSLS     r0,r2,#27
000004  0ec0              LSRS     r0,r0,#27
000006  1c43              ADDS     r3,r0,#1
;;;111    
;;;112        return (inputRate * m_val);
000008  4608              MOV      r0,r1
00000a  4358              MULS     r0,r3,r0
;;;113    }
00000c  4770              BX       lr
;;;114    
                          ENDP


                          AREA ||i.SystemCoreClockUpdate||, CODE, READONLY, ALIGN=2

                  SystemCoreClockUpdate PROC
;;;143       ---------------------------------------------------------------------------- */
;;;144    void SystemCoreClockUpdate (void) {
000000  b570              PUSH     {r4-r6,lr}
;;;145      uint32_t wdt_osc = 0U;
000002  2400              MOVS     r4,#0
;;;146      uint32_t irc_clk = 12000000U;
000004  4d41              LDR      r5,|L3.268|
;;;147    
;;;148      switch ((SYSCON->WDTOSCCTRL >> 5) & 0x0F) {
000006  4842              LDR      r0,|L3.272|
000008  6a40              LDR      r0,[r0,#0x24]
00000a  05c0              LSLS     r0,r0,#23
00000c  0f00              LSRS     r0,r0,#28
00000e  0003              MOVS     r3,r0
000010  f7fffffe          BL       __ARM_common_switch8
000014  10090b0d          DCB      0x10,0x09,0x0b,0x0d
000018  0f111315          DCB      0x0f,0x11,0x13,0x15
00001c  17191b1d          DCB      0x17,0x19,0x1b,0x1d
000020  1f212325          DCB      0x1f,0x21,0x23,0x25
000024  2729              DCB      0x27,0x29
;;;149        case 0:  wdt_osc =       0; break;
000026  2400              MOVS     r4,#0
000028  e01d              B        |L3.102|
;;;150        case 1:  wdt_osc =  600000; break;
00002a  4c3a              LDR      r4,|L3.276|
00002c  e01b              B        |L3.102|
;;;151        case 2:  wdt_osc = 1050000; break;
00002e  4c3a              LDR      r4,|L3.280|
000030  e019              B        |L3.102|
;;;152        case 3:  wdt_osc = 1400000; break;
000032  4c3a              LDR      r4,|L3.284|
000034  e017              B        |L3.102|
;;;153        case 4:  wdt_osc = 1750000; break;
000036  4c3a              LDR      r4,|L3.288|
000038  e015              B        |L3.102|
;;;154        case 5:  wdt_osc = 2100000; break;
00003a  4c3a              LDR      r4,|L3.292|
00003c  e013              B        |L3.102|
;;;155        case 6:  wdt_osc = 2400000; break;
00003e  4c3a              LDR      r4,|L3.296|
000040  e011              B        |L3.102|
;;;156        case 7:  wdt_osc = 2700000; break;
000042  4c3a              LDR      r4,|L3.300|
000044  e00f              B        |L3.102|
;;;157        case 8:  wdt_osc = 3000000; break;
000046  4c3a              LDR      r4,|L3.304|
000048  e00d              B        |L3.102|
;;;158        case 9:  wdt_osc = 3250000; break;
00004a  4c3a              LDR      r4,|L3.308|
00004c  e00b              B        |L3.102|
;;;159        case 10: wdt_osc = 3500000; break;
00004e  4c3a              LDR      r4,|L3.312|
000050  e009              B        |L3.102|
;;;160        case 11: wdt_osc = 3750000; break;
000052  4c3a              LDR      r4,|L3.316|
000054  e007              B        |L3.102|
;;;161        case 12: wdt_osc = 4000000; break;
000056  4c3a              LDR      r4,|L3.320|
000058  e005              B        |L3.102|
;;;162        case 13: wdt_osc = 4200000; break;
00005a  4c3a              LDR      r4,|L3.324|
00005c  e003              B        |L3.102|
;;;163        case 14: wdt_osc = 4400000; break;
00005e  4c3a              LDR      r4,|L3.328|
000060  e001              B        |L3.102|
;;;164        case 15: wdt_osc = 4600000; break;
000062  4c3a              LDR      r4,|L3.332|
000064  bf00              NOP      
                  |L3.102|
000066  bf00              NOP                            ;149
;;;165      }
;;;166      wdt_osc /= (((SYSCON->WDTOSCCTRL & 0x1F) + 1) << 1);
000068  4829              LDR      r0,|L3.272|
00006a  6a40              LDR      r0,[r0,#0x24]
00006c  06c0              LSLS     r0,r0,#27
00006e  0ec0              LSRS     r0,r0,#27
000070  1c40              ADDS     r0,r0,#1
000072  0041              LSLS     r1,r0,#1
000074  4620              MOV      r0,r4
000076  f7fffffe          BL       __aeabi_uidivmod
00007a  4604              MOV      r4,r0
;;;167    
;;;168      switch (SYSCON->MAINCLKSEL & SYSCON_MAINCLKSEL_SEL_MASK)
00007c  4824              LDR      r0,|L3.272|
00007e  3040              ADDS     r0,r0,#0x40
000080  6b00              LDR      r0,[r0,#0x30]
000082  0780              LSLS     r0,r0,#30
000084  0f80              LSRS     r0,r0,#30
000086  2800              CMP      r0,#0
000088  d006              BEQ      |L3.152|
00008a  2801              CMP      r0,#1
00008c  d007              BEQ      |L3.158|
00008e  2802              CMP      r0,#2
000090  d01f              BEQ      |L3.210|
000092  2803              CMP      r0,#3
000094  d12d              BNE      |L3.242|
000096  e01f              B        |L3.216|
                  |L3.152|
;;;169      {
;;;170        case 0U:                                              /* IRC  */
;;;171          SystemCoreClock = irc_clk;
000098  482d              LDR      r0,|L3.336|
00009a  6005              STR      r5,[r0,#0]  ; SystemCoreClock
;;;172          break;
00009c  e02a              B        |L3.244|
                  |L3.158|
;;;173          case 1U:                                            /* System PLL input */
;;;174            switch (SYSCON->SYSPLLCLKSEL & 0x03) {
00009e  481c              LDR      r0,|L3.272|
0000a0  3040              ADDS     r0,r0,#0x40
0000a2  6800              LDR      r0,[r0,#0]
0000a4  0780              LSLS     r0,r0,#30
0000a6  0f80              LSRS     r0,r0,#30
0000a8  2800              CMP      r0,#0
0000aa  d004              BEQ      |L3.182|
0000ac  2801              CMP      r0,#1
0000ae  d005              BEQ      |L3.188|
0000b0  2803              CMP      r0,#3
0000b2  d10b              BNE      |L3.204|
0000b4  e006              B        |L3.196|
                  |L3.182|
;;;175              case 0:                                         /* IRC */
;;;176                SystemCoreClock = irc_clk;
0000b6  4826              LDR      r0,|L3.336|
0000b8  6005              STR      r5,[r0,#0]  ; SystemCoreClock
;;;177                break;
0000ba  e008              B        |L3.206|
                  |L3.188|
;;;178              case 1:                                         /* System oscillator */
;;;179                SystemCoreClock = CLK_OSC_IN;
0000bc  4813              LDR      r0,|L3.268|
0000be  4924              LDR      r1,|L3.336|
0000c0  6008              STR      r0,[r1,#0]  ; SystemCoreClock
;;;180                break;
0000c2  e004              B        |L3.206|
                  |L3.196|
;;;181              case 3:                                         /* CLKIN */
;;;182                SystemCoreClock = EXT_CLK_IN;
0000c4  2000              MOVS     r0,#0
0000c6  4922              LDR      r1,|L3.336|
0000c8  6008              STR      r0,[r1,#0]  ; SystemCoreClock
;;;183                break;
0000ca  e000              B        |L3.206|
                  |L3.204|
;;;184              default:
;;;185                break;
0000cc  bf00              NOP      
                  |L3.206|
0000ce  bf00              NOP                            ;177
;;;186            }
;;;187          break;
0000d0  e010              B        |L3.244|
                  |L3.210|
;;;188        case 2U:                                              /* watchdog oscillator */
;;;189          SystemCoreClock = wdt_osc;
0000d2  481f              LDR      r0,|L3.336|
0000d4  6004              STR      r4,[r0,#0]  ; SystemCoreClock
;;;190          break;
0000d6  e00d              B        |L3.244|
                  |L3.216|
;;;191        case 3U:                                              /* System PLL  */
;;;192          SystemCoreClock = Clock_GetPLLFreq((SYSCON->SYSPLLCTRL & SYSCON_SYSPLLCTRL_MSEL_MASK), CLOCK_GetSystemPLLInClkRate());
0000d8  f7fffffe          BL       CLOCK_GetSystemPLLInClkRate
0000dc  4606              MOV      r6,r0
0000de  490c              LDR      r1,|L3.272|
0000e0  6889              LDR      r1,[r1,#8]
0000e2  06c8              LSLS     r0,r1,#27
0000e4  0ec0              LSRS     r0,r0,#27
0000e6  4631              MOV      r1,r6
0000e8  f7fffffe          BL       Clock_GetPLLFreq
0000ec  4918              LDR      r1,|L3.336|
0000ee  6008              STR      r0,[r1,#0]  ; SystemCoreClock
;;;193          break;
0000f0  e000              B        |L3.244|
                  |L3.242|
;;;194        default:
;;;195          break;
0000f2  bf00              NOP      
                  |L3.244|
0000f4  bf00              NOP                            ;172
;;;196      }
;;;197    
;;;198      SystemCoreClock /= SYSCON->SYSAHBCLKDIV;
0000f6  4806              LDR      r0,|L3.272|
0000f8  3040              ADDS     r0,r0,#0x40
0000fa  6b81              LDR      r1,[r0,#0x38]
0000fc  4814              LDR      r0,|L3.336|
0000fe  6800              LDR      r0,[r0,#0]  ; SystemCoreClock
000100  f7fffffe          BL       __aeabi_uidivmod
000104  4912              LDR      r1,|L3.336|
000106  6008              STR      r0,[r1,#0]  ; SystemCoreClock
;;;199    }
000108  bd70              POP      {r4-r6,pc}
                          ENDP

00010a  0000              DCW      0x0000
                  |L3.268|
                          DCD      0x00b71b00
                  |L3.272|
                          DCD      0x40048000
                  |L3.276|
                          DCD      0x000927c0
                  |L3.280|
                          DCD      0x00100590
                  |L3.284|
                          DCD      0x00155cc0
                  |L3.288|
                          DCD      0x001ab3f0
                  |L3.292|
                          DCD      0x00200b20
                  |L3.296|
                          DCD      0x00249f00
                  |L3.300|
                          DCD      0x002932e0
                  |L3.304|
                          DCD      0x002dc6c0
                  |L3.308|
                          DCD      0x00319750
                  |L3.312|
                          DCD      0x003567e0
                  |L3.316|
                          DCD      0x00393870
                  |L3.320|
                          DCD      0x003d0900
                  |L3.324|
                          DCD      0x00401640
                  |L3.328|
                          DCD      0x00432380
                  |L3.332|
                          DCD      0x004630c0
                  |L3.336|
                          DCD      SystemCoreClock

                          AREA ||i.SystemInit||, CODE, READONLY, ALIGN=2

                  SystemInit PROC
;;;126    
;;;127    void SystemInit (void) {
000000  4803              LDR      r0,|L4.16|
;;;128    
;;;129    #if defined(__MCUXPRESSO)
;;;130        extern void(*const g_pfnVectors[]) (void);
;;;131        SCB->VTOR = (uint32_t) &g_pfnVectors;
;;;132    #else
;;;133        extern void *__Vectors;
;;;134        SCB->VTOR = (uint32_t) &__Vectors;
000002  4904              LDR      r1,|L4.20|
000004  6088              STR      r0,[r1,#8]
;;;135    #endif
;;;136        SystemCoreClock = DEFAULT_SYSTEM_CLOCK;
000006  4804              LDR      r0,|L4.24|
000008  4904              LDR      r1,|L4.28|
00000a  6008              STR      r0,[r1,#0]  ; SystemCoreClock
;;;137    }
00000c  4770              BX       lr
;;;138    
                          ENDP

00000e  0000              DCW      0x0000
                  |L4.16|
                          DCD      __Vectors
                  |L4.20|
                          DCD      0xe000ed00
                  |L4.24|
                          DCD      0x00b71b00
                  |L4.28|
                          DCD      SystemCoreClock

                          AREA ||.data||, DATA, ALIGN=2

                  SystemCoreClock
                          DCD      0x00b71b00

                          AREA ||i.__ARM_common_switch8||, COMGROUP=__ARM_common_switch8, CODE, READONLY, ALIGN=1

                  __ARM_common_switch8 PROC
000000  b430              PUSH     {r4,r5}
000002  4674              MOV      r4,lr
000004  1e64              SUBS     r4,r4,#1
000006  7825              LDRB     r5,[r4,#0]
000008  1c64              ADDS     r4,r4,#1
00000a  42ab              CMP      r3,r5
00000c  d304              BCC      |L32.24|
                  |L32.14|
00000e  5d63              LDRB     r3,[r4,r5]
000010  005b              LSLS     r3,r3,#1
000012  18e3              ADDS     r3,r4,r3
000014  bc30              POP      {r4,r5}
000016  4718              BX       r3
                  |L32.24|
000018  461d              MOV      r5,r3
00001a  e7f8              B        |L32.14|
                          ENDP


;*** Start embedded assembler ***

#line 1 "lpc_chip_82x\\system_LPC824.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___15_system_LPC824_c_5d646a67____REV16|
#line 465 ".\\_CMSIS\\v5.20\\Include\\cmsis_armcc.h"
|__asm___15_system_LPC824_c_5d646a67____REV16| PROC
#line 466

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___15_system_LPC824_c_5d646a67____REVSH|
#line 480
|__asm___15_system_LPC824_c_5d646a67____REVSH| PROC
#line 481

 revsh r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
